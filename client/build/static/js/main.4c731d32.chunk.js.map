{"version":3,"sources":["actions/auth-actions/types.js","reducers/authReducer.js","actions/actions-initiation-actions/types.js","reducers/actionsReducer.js","actions/doctors-actions/types.js","reducers/doctorsReducer.js","actions/localisations-actions/types.js","reducers/localisationsReducer.js","actions/notifications-actions/types.js","reducers/notificationsReducer.js","actions/notes-actions/types.js","reducers/notesReducer.js","actions/agencies-actions/types.js","reducers/agenciesReducer.js","actions/services-actions/types.js","reducers/servicesReducer.js","reducers/index.js","store/store.js","config/axios-instance.js","actions/auth-actions/services.js","actions/auth-actions/actions.js","components/authentication/Signup.js","components/authentication/Login.js","components/authentication/ForgotPassword.js","components/authentication/ResetPassword.js","components/common/PageTitle.js","actions/actions-initiation-actions/services.js","actions/actions-initiation-actions/actions.js","actions/localisations-actions/services.js","actions/doctors-actions/services.js","views/ActionsInitiation.js","actions/doctors-actions/actions.js","actions/localisations-actions/actions.js","views/ActionsMonitoring.js","views/ActionsValidation.js","actions/agencies-actions/services.js","actions/services-actions/services.js","views/AfterValidation.js","actions/agencies-actions/actions.js","actions/services-actions/actions.js","views/ActionsArchiving.js","components/layout/MainNavbar/NavbarNav/ViewNotifications.js","actions/notifications-actions/services.js","actions/notifications-actions/actions.js","components/recap-statistics/DoctorsSpeciality.js","components/recap-statistics/DoctorsFeedback.js","views/DisplayAction.js","components/layout/MainNavbar/dropdown-menu/EditUserProfile.js","components/dashboard-statistics/DoctorsSpeciality.js","components/dashboard-statistics/DoctorsFeedback.js","components/dashboard-statistics/ActionsReporting.js","views/Charts.js","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","flux/constants.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","layouts/Default.js","App.js","reportWebVitals.js","index.js"],"names":["REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","GET_AUTH_REQUEST","GET_AUTH_SUCCESS","GET_AUTH_FAILURE","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILURE","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","INITIAL_STATE","isAuthenticated","isLoading","user","userID","users","token","resetPasswordtoken","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","ADD_ACTION_FAILURE","FETCH_ACTIONS_REQUEST","FETCH_ACTIONS_SUCCESS","FETCH_ACTIONS_FAILURE","FETCH_LAST_ACTION_REQUEST","FETCH_LAST_ACTION_SUCCESS","FETCH_LAST_ACTION_FAILURE","FETCH_ACTION_BY_ID_REQUEST","FETCH_ACTION_BY_ID_SUCCESS","FETCH_ACTION_BY_ID_FAILURE","FETCH_ACTION_BY_USER_ID_REQUEST","FETCH_ACTION_BY_USER_ID_SUCCESS","FETCH_ACTION_BY_USER_ID_FAILURE","FETCH_ACTION_BY_USER_POSITION_REQUEST","FETCH_ACTION_BY_USER_POSITION_SUCCESS","FETCH_ACTION_BY_USER_POSITION_FAILURE","FETCH_ACTION_BY_STATUS_REQUEST","FETCH_ACTION_BY_STATUS_SUCCESS","FETCH_ACTION_BY_STATUS_FAILURE","FETCH_VM_ACTIONS_BY_USER_ID_REQUEST","FETCH_VM_ACTIONS_BY_USER_ID_SUCCESS","FETCH_VM_ACTIONS_BY_USER_ID_FAILURE","FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST","FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS","FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE","FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST","FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS","FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE","FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_REQUEST","FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS","FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_FAILURE","FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_REQUEST","FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_SUCCESS","FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_FAILURE","FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_REQUEST","FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_SUCCESS","FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_FAILURE","FETCH_SPEAKER_ACTIONS_BY_USER_ID_REQUEST","FETCH_SPEAKER_ACTIONS_BY_USER_ID_SUCCESS","FETCH_SPEAKER_ACTIONS_BY_USER_ID_FAILURE","DELETE_ACTION_BY_ID_REQUEST","DELETE_ACTION_BY_ID_SUCCESS","DELETE_ACTION_BY_ID_FAILURE","actions","actionsUser","VMActions","VMValidatedActions","validatedDSMActions","validatedCDPActions","rejectedDSMActions","rejectedCDPActions","speakerActions","notifications","lastAction","actionsByPosition","actionsByStatus","actionId","action","loading","ADD_DOCTOR_REQUEST","ADD_DOCTOR_SUCCESS","ADD_DOCTOR_FAILURE","FETCH_DOCTORS_REQUEST","FETCH_DOCTORS_SUCCESS","FETCH_DOCTORS_FAILURE","FETCH_INVITED_DOCTORS_REQUEST","FETCH_INVITED_DOCTORS_SUCCESS","FETCH_INVITED_DOCTORS_FAILURE","FETCH_LAST_DOCTOR_REQUEST","FETCH_LAST_DOCTOR_SUCCESS","FETCH_LAST_DOCTOR_FAILURE","doctors","invited_doctors","lastDoctor","ADD_LOCALISATION_REQUEST","ADD_LOCALISATION_SUCCESS","ADD_LOCALISATION_FAILURE","FETCH_LOCALISATIONS_REQUEST","FETCH_LOCALISATIONS_SUCCESS","FETCH_LOCALISATIONS_FAILURE","localisations","FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST","FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS","FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE","FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST","FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS","FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE","FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST","FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS","FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE","notifications_VM_supervisor","notifications_DSM_supervisor","notifications_CDP_supervisor","FETCH_NOTES_BY_ACTION_SENDER_REQUEST","FETCH_NOTES_BY_ACTION_SENDER_SUCCESS","FETCH_NOTES_BY_ACTION_SENDER_FAILURE","notesActionSender","FETCH_AGENCIES_REQUEST","FETCH_AGENCIES_SUCCESS","FETCH_AGENCIES_FAILURE","agencies","FETCH_SERVICES_REQUEST","FETCH_SERVICES_SUCCESS","FETCH_SERVICES_FAILURE","services","RootReducer","combineReducers","actionsReducer","state","type","payload","authReducer","id","resetPasswordToken","doctorsReducer","localisationsReducer","notificationsReducer","notesReducer","agenciesReducer","servicesReducer","logger","createLogger","collapsed","colors","title","prevState","nextState","error","store","createStore","reducers","applyMiddleware","thunk","localStorage","getItem","axiosInstance","axios","create","baseURL","process","MIX_API_URL","headers","Accept","Authorization","interceptors","request","use","config","Promise","reject","response","status","dispatch","logoutAuthUser","history","push","AuthServices","registerUser","body","method","url","data","loginUser","getAuthUserRequest","user_id","params","logoutUser","updateUserProfileRequest","forgotPassword","resetPassword","toast","configure","signupUser","values","a","DuplicateAlert","position","POSITION","TOP_LEFT","message","insertId","signinUser","success","setItem","getAuthUser","clear","window","location","reload","updateUserProfile","forgotPasswordUser","user_email","alert","info","resetPasswordUser","user_password","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","classes","useDispatch","onSubmit","formFields","size","field","className","style","name","props","label","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","validate","errors","render","handleSubmit","padding","map","index","Button","onClick","reset","Box","mt","ForgotPassword","pathname","split","ResetPassword","FormData","append","JSON","stringify","PageTitle","subtitle","attrs","classNames","ActionsServices","fetchActions","addAction","Content_type","fetchLastAction","fetchActionById","action_id","get","fetchActionByUserId","fetchActionByUserPosition","user_position","fetchActionByStatus","fetchVMActionByUserId","fetchVMValidatedActionByUserId","fetchDSMValidatedActionByUserId","validateDSMSpeakerStatusActionById","action_sender","fetchCDPValidatedActionByUserId","fetchDSMRejectedActionByUserId","fetchCDPRejectedActionByUserId","fetchSpeakerAction","updateActionById","validateDSMStatusActionById","validateVMStatusActionById","DSM_supervisor","CDP_supervisor","validateCDPStatusActionById","validateMEDFirstStatusActionById","validateMEDStatusActionById","denyDSMStatusActionById","denyCDPStatusActionById","validateCDPFirstStatusActionById","deleteActionById","delete","returnActionByIdRequest","messagingValidationRequest","to","messagingRejectionRequest","validateServicesRequest","console","log","getActionByUserId","getVMActionsByUserId","getVMValidatedActionsByUserId","getSpeakerActions","modifyActionById","denyCDPActionById","setInterval","returnActionById","messagingValidation","messagingRejection","validateservices","LocalisationsServices","fetchLocalisations","addLocalisation","DoctorsServices","fetchDoctors","fetchLastDoctor","fetchDoctorsByUserId","fetchInvitedDoctors","doctor_name","addDoctor","ActionsInitiation","useState","FilteredDoctors","setFilteredDoctors","FilteredGeoLocalisation","setFilteredGeoLocalisation","File","setFile","Count","setCount","StartAction","setStartAction","EndAction","setEndAction","Speaker","setSpeaker","SpeakerTransfer","setSpeakerTransfer","SpeakerAccommodation","setSpeakerAccommodation","Text","setText","useHistory","useSelector","products","speciality","filter","filteredDoctors","filteredGeolocalisation","handleFilteredDoctors","counter","$","each","element","value","k","length","l","includes","doctor_field","concat","indexOf","handleNumberDoctors","handleFilteredGeolocalisation","document","ready","i","children","j","selected","pop","onFileChange","e","target","files","handleBack","goBack","formData","end_action","comments","speaker_suggestion","other_location","other_doctors","other_stuff","speaker","parseInt","speaker_transfer","speaker_accommodation","insertedActionId","useEffect","hide","start_action","shift","action_location","invitedDoctors","doctor_lname","doctor_fname","initialValue","action_type","formControlProps","MenuItem","utils","DateFnsUtils","InputProps","inputProps","min","toLocaleDateString","reverse","join","schedule","MomentUtils","action_town","key","localisation_name","product","multiple","native","RadioGroup","defaultValue","onChange","toggle","FormControlLabel","control","Radio","placeholder","intialize","initial","meeting_agenda","filename","meeting_theme","pax_number","action_field","options","allowTabFill","disableHint","preventDefault","text","toLowerCase","trim","CircularProgress","maxWidth","noGutters","encType","table","minWidth","tableCell","textAlign","ActionsMonitoring","handleClick","isCancelled","fluid","TableContainer","overflow","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","ActionsValidation","AgenciesServices","fetchAgencies","ServicesServices","fetchServices","AfterValidation","agency_email","agency_name","service_name","TextField","ActionsArchiving","momentNow","getTime","ViewNotifications","NotificationsServices","fetchNotifications","addNotification","fetchNotificationsByVMsupervisor","VM_supervisor","fetchNotificationsByDSMsupervisor","fetchNotificationsByCDPsupervisor","markAsReadNotificationsVMsupervisorRequest","notification_id","markAsReadNotificationsDSMsupervisorRequest","markAsReadNotificationsCDPsupervisorRequest","getNotificationsByVMsupervisor","getNotificationsByDSMsupervisor","getNotificationsByCDPsupervisor","pushNotification","InvitedDoctorsSpeciality","chartData","prevProps","jobDoctor","generalist","generalDoctor","neuphrologie","kidsDoctor","chirugien","jobDoctorPercentage","generalistPercentage","generalDoctorPercentage","neuphrologiePercentage","kidsDoctorPercentage","chirugienPercentage","this","arr","then","total","Math","round","setState","labels","datasets","borderWidth","borderColor","small","responsive","maintainAspectRatio","React","Component","defaultProps","connect","ownProps","getInvitedDoctors","InvitedDoctorsFeedback","A","B","C","APercentage","BPercentage","CPercentage","doctor_potential","DisplayAction","useTheme","fullScreen","useMediaQuery","breakpoints","down","open","setOpen","NoteContent","setNoteContent","LastAction","setLastAction","pathId","alt","src","handleDialoClose","startDate","endDate","marginBottom","lg","justifyContent","validationVMText","validationDSMText","validationCDPText","notification_sender","recieved_since","notification_name","user_phone_number","VM_validation","validateDSMActionById","validateDSMSpeakerActionById","validateCDPFirstActionById","validateCDPActionById","validateMEDFirstActionById","validateMEDActionById","marginRight","rejectionVMText","rejectionDSMText","rejectionCDPText","denyDSMActionById","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","multiline","rowsMax","DialogActions","autoFocus","returnedDSMText","returnedCDPText","returnedMEDText","EditUserProfile","user_password_confirmation","DoctorsSpeciality","DoctorsFeedback","ActionsReporting","validated","denied","pending","pendingVM","pendingDSM","pendingCDP","pendingPercentage","pendingPercentageVM","pendingPercentageDSM","pendingPercentageCDP","deniedPercentage","validatedPercentage","err","Charts","Username","setUsername","Notifications","notificationsVM_supervisor","notificationsDSM_supervisor","notificationsCDP_supervisor","alertNotif","VM_counter","DSM_counter","CDP_counter","showCounter","visible","toggleNotifications","bind","nextProps","VM_notif","markAsRead_VM_supervisor","DSM_notif","markAsRead_DSM_supervisor","CDP_notif","markAsRead_CDP_supervisor","markAsReadNotificationsByVMsupervisor","markAsReadNotificationsByDSMsupervisor","markAsReadNotificationsByCDPsupervisor","pill","moment","from","tag","lastNotification","UserActions","username","toggleUserActions","handleLogout","user_avatar","Dropdown","caret","NavLink","DropdownMenu","right","divider","NavbarNav","notes","navbar","Dispatcher","_store","menuVisible","navItems","htmlBefore","getSidebarNavItems","registerToActions","toggleSidebar","register","actionType","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","MainNavbar","layout","stickyTop","SidebarMainNavbar","handleToggleSidebar","lineHeight","hideLogoText","SidebarNavItem","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","SidebarNavItems","Store","getSidebarItems","addChangeListener","removeChangeListener","items","idx","MainSidebar","sidebarNavItems","getMenuState","MainFooter","contained","menuItems","copyright","socket","io","transports","DefaultLayout","noNavbar","noFooter","offset","exact","path","authenticated","Signup","GuestRoute","rest","AuthRoute","Layout","loggedIn","setLoggedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","WrappedApp","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4c731d32.chunk.js","sourcesContent":["export const REGISTER_USER_REQUEST = \"REGISTER_USER_REQUEST\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\r\nexport const REGISTER_USER_FAILURE = \"REGISTER_USER_FAILURE\";\r\n\r\nexport const LOGIN_USER_REQUEST = \"LOGIN_USER_REQUEST\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_FAILURE = \"LOGIN_USER_FAILURE\";\r\n\r\nexport const CONNECT_USER_REQUEST = \"CONNECT_USER_REQUEST\";\r\nexport const CONNECT_USER_SUCCESS = \"CONNECT_USER_SUCCESS\";\r\nexport const CONNECT_USER_FAILURE = \"CONNECT_USER_FAILURE\";\r\n\r\nexport const GET_AUTH_REQUEST = \"GET_AUTH_REQUEST\";\r\nexport const GET_AUTH_SUCCESS = \"GET_AUTH_SUCCESS\";\r\nexport const GET_AUTH_FAILURE = \"GET_AUTH_FAILURE\";\r\n\r\nexport const UPDATE_USER_PROFILE_REQUEST = \"UPDATE_USER_PROFILE_REQUEST\";\r\nexport const UPDATE_USER_PROFILE_SUCCESS = \"UPDATE_USER_PROFILE_SUCCESS\";\r\nexport const UPDATE_USER_PROFILE_FAILURE = \"UPDATE_USER_PROFILE_FAILURE\";\r\n\r\nexport const LOGOUT_USER_REQUEST = \"LOGOUT_USER_REQUEST\";\r\nexport const LOGOUT_USER_SUCCESS = \"LOGOUT_USER_SUCCESS\";\r\nexport const LOGOUT_USER_FAILURE = \"LOGOUT_USER_FAILURE\";\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\";\r\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\r\nexport const FORGOT_PASSWORD_FAILURE = \"FORGOT_PASSWORD_FAILURE\";\r\n\r\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\";\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\nexport const RESET_PASSWORD_FAILURE = \"RESET_PASSWORD_FAILURE\";\r\n","import { REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE, GET_AUTH_REQUEST, GET_AUTH_SUCCESS, GET_AUTH_FAILURE, LOGOUT_USER_REQUEST, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILURE, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILURE } from \"../actions/auth-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  user: {},\r\n  userID: 0,\r\n  users: [],\r\n  token: null,\r\n  resetPasswordtoken: null,\r\n};\r\n\r\nexport const authReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case REGISTER_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    case REGISTER_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userID : action.payload.id,\r\n        isAuthenticated : true,\r\n      };\r\n    case REGISTER_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        isAuthenticated : false,\r\n      };\r\n    case LOGIN_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user : action.payload.user,\r\n        token : action.payload.token,\r\n        isAuthenticated : true,\r\n      };\r\n    case LOGIN_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        isAuthenticated : false,\r\n      };\r\n    case GET_AUTH_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading : true,\r\n      };\r\n    case GET_AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user : action.payload,\r\n        isLoading : false,\r\n        isAuthenticated : true,\r\n      };\r\n    case GET_AUTH_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading : false,\r\n      };\r\n    case LOGOUT_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    case LOGOUT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        token: null,\r\n      };\r\n    case LOGOUT_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    case FORGOT_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    case FORGOT_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        resetPasswordtoken: action.payload.resetPasswordToken,\r\n      };\r\n    case FORGOT_PASSWORD_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","export const ADD_ACTION_REQUEST = \"ADD_ACTION_REQUEST\";\r\nexport const ADD_ACTION_SUCCESS = \"ADD_ACTION_SUCCESS\";\r\nexport const ADD_ACTION_FAILURE = \"ADD_ACTION_FAILURE\";\r\n\r\nexport const FETCH_ACTIONS_REQUEST = \"FETCH_ACTIONS_REQUEST\";\r\nexport const FETCH_ACTIONS_SUCCESS = \"FETCH_ACTIONS_SUCCESS\";\r\nexport const FETCH_ACTIONS_FAILURE = \"FETCH_ACTIONS_FAILURE\";\r\n\r\nexport const FETCH_LAST_ACTION_REQUEST = \"FETCH_LAST_ACTION_REQUEST\";\r\nexport const FETCH_LAST_ACTION_SUCCESS = \"FETCH_LAST_ACTION_SUCCESS\";\r\nexport const FETCH_LAST_ACTION_FAILURE = \"FETCH_LAST_ACTION_FAILURE\";\r\n\r\nexport const FETCH_ACTION_BY_ID_REQUEST = \"FETCH_ACTION_BY_ID_REQUEST\";\r\nexport const FETCH_ACTION_BY_ID_SUCCESS = \"FETCH_ACTION_BY_ID_SUCCESS\";\r\nexport const FETCH_ACTION_BY_ID_FAILURE = \"FETCH_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const FETCH_ACTION_BY_USER_ID_REQUEST = \"FETCH_ACTION_BY_USER_ID_REQUEST\";\r\nexport const FETCH_ACTION_BY_USER_ID_SUCCESS = \"FETCH_ACTION_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_ACTION_BY_USER_ID_FAILURE = \"FETCH_ACTION_BY_USER_ID_FAILURE\";\r\n\r\nexport const UPDATE_ACTION_BY_ID_REQUEST = \"UPDATE_ACTION_BY_ID_REQUEST\";\r\nexport const UPDATE_ACTION_BY_ID_SUCCESS = \"UPDATE_ACTION_BY_ID_SUCCESS\";\r\nexport const UPDATE_ACTION_BY_ID_FAILURE = \"UPDATE_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const FETCH_ACTION_BY_USER_POSITION_REQUEST = \"FETCH_ACTION_BY_USER_POSITION_REQUEST\";\r\nexport const FETCH_ACTION_BY_USER_POSITION_SUCCESS = \"FETCH_ACTION_BY_USER_POSITION_SUCCESS\";\r\nexport const FETCH_ACTION_BY_USER_POSITION_FAILURE = \"FETCH_ACTION_BY_USER_POSITION_FAILURE\";\r\n\r\nexport const FETCH_ACTION_BY_STATUS_REQUEST = \"FETCH_ACTION_BY_STATUS_REQUEST\";\r\nexport const FETCH_ACTION_BY_STATUS_SUCCESS = \"FETCH_ACTION_BY_STATUS_SUCCESS\";\r\nexport const FETCH_ACTION_BY_STATUS_FAILURE = \"FETCH_ACTION_BY_STATUS_FAILURE\";\r\n\r\nexport const FETCH_VM_ACTIONS_BY_USER_ID_REQUEST = \"FETCH_VM_ACTIONS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_VM_ACTIONS_BY_USER_ID_SUCCESS = \"FETCH_VM_ACTIONS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_VM_ACTIONS_BY_USER_ID_FAILURE = \"FETCH_VM_ACTIONS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST = \"FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS = \"FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE = \"FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST = \"FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS = \"FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE = \"FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_REQUEST = \"FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS = \"FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_FAILURE = \"FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_REQUEST = \"FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_SUCCESS = \"FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_FAILURE = \"FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_REQUEST = \"FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_SUCCESS = \"FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_FAILURE = \"FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_SPEAKER_ACTIONS_BY_USER_ID_REQUEST = \"FETCH_SPEAKER_ACTIONS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_SPEAKER_ACTIONS_BY_USER_ID_SUCCESS = \"FETCH_SPEAKER_ACTIONS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_SPEAKER_ACTIONS_BY_USER_ID_FAILURE = \"FETCH_SPEAKER_ACTIONS_BY_USER_ID_FAILURE\";\r\n\r\nexport const VALIDATE_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const VALIDATE_DSM_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_DSM_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_DSM_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_DSM_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_DSM_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_DSM_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const VALIDATE_VM_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_VM_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_VM_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_VM_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_VM_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_VM_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const VALIDATE_CDP_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_CDP_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_CDP_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_CDP_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_CDP_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_CDP_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const VALIDATE_MED_STATUS_ACTION_BY_ID_REQUEST = \"VALIDATE_MED_STATUS_ACTION_BY_ID_REQUEST\";\r\nexport const VALIDATE_MED_STATUS_ACTION_BY_ID_SUCCESS = \"VALIDATE_MED_STATUS_ACTION_BY_ID_SUCCESS\";\r\nexport const VALIDATE_MED_STATUS_ACTION_BY_ID_FAILURE = \"VALIDATE_MED_STATUS_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const DENY_STATUS_DSM_ACTION_BY_ID_REQUEST = \"DENY_STATUS_DSM_ACTION_BY_ID_REQUEST\";\r\nexport const DENY_STATUS_DSM_ACTION_BY_ID_SUCCESS = \"DENY_STATUS_DSM_ACTION_BY_ID_SUCCESS\";\r\nexport const DENY_STATUS_DSM_ACTION_BY_ID_FAILURE = \"DENY_STATUS_DSM_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const DENY_STATUS_CDP_ACTION_BY_ID_REQUEST = \"DENY_STATUS_CDP_ACTION_BY_ID_REQUEST\";\r\nexport const DENY_STATUS_CDP_ACTION_BY_ID_SUCCESS = \"DENY_STATUS_CDP_ACTION_BY_ID_SUCCESS\";\r\nexport const DENY_STATUS_CDP_ACTION_BY_ID_FAILURE = \"DENY_STATUS_CDP_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const DELETE_ACTION_BY_ID_REQUEST = \"DELETE_ACTION_BY_ID_REQUEST\";\r\nexport const DELETE_ACTION_BY_ID_SUCCESS = \"DELETE_ACTION_BY_ID_SUCCESS\";\r\nexport const DELETE_ACTION_BY_ID_FAILURE = \"DELETE_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const RETURN_ACTION_BY_ID_REQUEST = \"RETURN_ACTION_BY_ID_REQUEST\";\r\nexport const RETURN_ACTION_BY_ID_SUCCESS = \"RETURN_ACTION_BY_ID_SUCCESS\";\r\nexport const RETURN_ACTION_BY_ID_FAILURE = \"RETURN_ACTION_BY_ID_FAILURE\";\r\n\r\nexport const MESSAGING_VALIDATION_REQUEST = \"MESSAGING_VALIDATION_REQUEST\";\r\nexport const MESSAGING_VALIDATION_SUCCESS = \"MESSAGING_VALIDATION_SUCCESS\";\r\nexport const MESSAGING_VALIDATION_FAILURE = \"MESSAGING_VALIDATION_FAILURE\";\r\n\r\nexport const MESSAGING_REJECTION_REQUEST = \"MESSAGING_REJECTION_REQUEST\";\r\nexport const MESSAGING_REJECTION_SUCCESS = \"MESSAGING_REJECTION_SUCCESS\";\r\nexport const MESSAGING_REJECTION_FAILURE = \"MESSAGING_REJECTION_FAILURE\";\r\n\r\nexport const SERVICES_REQUEST = \"SERVICES_REQUEST\";\r\nexport const SERVICES_SUCCESS = \"SERVICES_SUCCESS\";\r\nexport const SERVICES_FAILURE = \"SERVICES_FAILURE\";","import { FETCH_ACTIONS_REQUEST, FETCH_ACTIONS_SUCCESS, FETCH_ACTIONS_FAILURE, ADD_ACTION_REQUEST, ADD_ACTION_SUCCESS, ADD_ACTION_FAILURE, FETCH_LAST_ACTION_REQUEST, FETCH_LAST_ACTION_SUCCESS, FETCH_LAST_ACTION_FAILURE, FETCH_ACTION_BY_ID_REQUEST, FETCH_ACTION_BY_ID_SUCCESS, FETCH_ACTION_BY_ID_FAILURE, FETCH_ACTION_BY_USER_ID_REQUEST, FETCH_ACTION_BY_USER_ID_SUCCESS, FETCH_ACTION_BY_USER_ID_FAILURE, FETCH_VM_ACTIONS_BY_USER_ID_REQUEST, FETCH_VM_ACTIONS_BY_USER_ID_SUCCESS, FETCH_VM_ACTIONS_BY_USER_ID_FAILURE, FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST, FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE, FETCH_ACTION_BY_USER_POSITION_REQUEST, FETCH_ACTION_BY_USER_POSITION_SUCCESS, FETCH_ACTION_BY_STATUS_REQUEST, FETCH_ACTION_BY_STATUS_SUCCESS, FETCH_ACTION_BY_STATUS_FAILURE, FETCH_ACTION_BY_USER_POSITION_FAILURE, FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST, FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE, FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_REQUEST, FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_FAILURE, FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_REQUEST, FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_FAILURE, FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_REQUEST, FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_SPEAKER_ACTIONS_BY_USER_ID_REQUEST, FETCH_SPEAKER_ACTIONS_BY_USER_ID_SUCCESS, FETCH_SPEAKER_ACTIONS_BY_USER_ID_FAILURE, FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_FAILURE, DELETE_ACTION_BY_ID_REQUEST, DELETE_ACTION_BY_ID_SUCCESS, DELETE_ACTION_BY_ID_FAILURE } from \"../actions/actions-initiation-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  actions: [],\r\n  actionsUser: [],\r\n  VMActions: [],\r\n  VMValidatedActions: [],\r\n  validatedDSMActions: [],\r\n  validatedCDPActions: [],\r\n  rejectedDSMActions: [],\r\n  rejectedCDPActions: [],\r\n  speakerActions: [],\r\n  notifications: [],\r\n  lastAction: {},\r\n  actionsByPosition: [],\r\n  actionsByStatus: [],\r\n  actionId:0,\r\n  action: {},\r\n  loading: false,\r\n};\r\n\r\nexport const actionsReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Fetch actions request\r\n    case FETCH_ACTIONS_REQUEST:\r\n      return { \r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // Fetch actions success\r\n    case FETCH_ACTIONS_SUCCESS:\r\n      return { \r\n        ...state,\r\n        actions: action.payload,\r\n        loading: false,\r\n      };\r\n    // Fetch actions failure\r\n    case FETCH_ACTIONS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // Fetch last action request\r\n    case FETCH_LAST_ACTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // Fetch last action success\r\n    case FETCH_LAST_ACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        lastAction: action.payload,\r\n        loading: false,\r\n      };\r\n    // Fetch last action failure\r\n    case FETCH_LAST_ACTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // Fetch action by ID request\r\n    case FETCH_ACTION_BY_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // Fetch action by ID success\r\n    case FETCH_ACTION_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        action: action.payload,\r\n        loading: false,\r\n      };\r\n    // Fetch action by ID failure\r\n    case FETCH_ACTION_BY_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // Fetch action by user ID request\r\n    case FETCH_ACTION_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // Fetch action by user ID success\r\n    case FETCH_ACTION_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionsUser: action.payload,\r\n        loading: false,\r\n      };\r\n    // Fetch action by user ID failure\r\n    case FETCH_ACTION_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // Fetch action by user ID request\r\n    case FETCH_VM_ACTIONS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // Fetch action by user ID success\r\n    case FETCH_VM_ACTIONS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        VMActions: action.payload,\r\n        loading: false,\r\n      };\r\n    // Fetch action by user ID failure\r\n    case FETCH_VM_ACTIONS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // Fetch vm validated action by user ID request\r\n    case FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // Fetch VM validated action by user ID success\r\n    case FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        VMValidatedActions: action.payload,\r\n        loading: false,\r\n      };\r\n    // Fetch VM validated action by user ID failure\r\n    case FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // Fetch action by user position request\r\n    case FETCH_ACTION_BY_USER_POSITION_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch action by user position success\r\n    case FETCH_ACTION_BY_USER_POSITION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionsByPosition: action.payload,\r\n      };\r\n    // Fetch action by user position failure\r\n    case FETCH_ACTION_BY_USER_POSITION_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch action by status position request\r\n    case FETCH_ACTION_BY_STATUS_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch action by status position success\r\n    case FETCH_ACTION_BY_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionsByStatus: action.payload,\r\n      };\r\n    // Fetch action by status position failure\r\n    case FETCH_ACTION_BY_STATUS_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch validated DSM actions request\r\n    case FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch validated DSM actions success\r\n    case FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        validatedDSMActions: action.payload,\r\n      };\r\n    // Fetch validated DSM actions failure\r\n    case FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch validated CDP actions request\r\n    case FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch validated CDP actions success\r\n    case FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        validatedCDPActions: action.payload,\r\n      };\r\n    // Fetch validated CDP actions failure\r\n    case FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch rejected DSM actions request\r\n    case FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch rejected DSM actions success\r\n    case FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        rejectedDSMActions: action.payload,\r\n      };\r\n    // Fetch rejected DSM actions failure\r\n    case FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch rejected CDP actions request\r\n    case FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch rejected CDP actions success\r\n    case FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        rejectedCDPActions: action.payload,\r\n      };\r\n    // Fetch rejected CDP actions failure\r\n    case FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch speaker actions request\r\n    case FETCH_SPEAKER_ACTIONS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch speaker actions success\r\n    case FETCH_SPEAKER_ACTIONS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        speakerActions: action.payload,\r\n      };\r\n    // Fetch speaker actions failure\r\n    case FETCH_SPEAKER_ACTIONS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Add action request\r\n    case ADD_ACTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // Add action success\r\n    case ADD_ACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionId: action.payload,\r\n        loading: false,\r\n      };\r\n    // Add action failure\r\n    case ADD_ACTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // delete action request\r\n    case DELETE_ACTION_BY_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    // delete action success\r\n    case DELETE_ACTION_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        action: action.payload,\r\n        loading: false,\r\n      };\r\n    // delete action failure\r\n    case DELETE_ACTION_BY_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","export const ADD_DOCTOR_REQUEST = \"ADD_DOCTOR_REQUEST\";\r\nexport const ADD_DOCTOR_SUCCESS = \"ADD_DOCTOR_SUCCESS\";\r\nexport const ADD_DOCTOR_FAILURE = \"ADD_DOCTOR_FAILURE\";\r\n\r\nexport const FETCH_DOCTORS_REQUEST = \"FETCH_DOCTORS_REQUEST\";\r\nexport const FETCH_DOCTORS_SUCCESS = \"FETCH_DOCTORS_SUCCESS\";\r\nexport const FETCH_DOCTORS_FAILURE = \"FETCH_DOCTORS_FAILURE\";\r\n\r\nexport const FETCH_DOCTORS_BY_USER_ID_REQUEST = \"FETCH_DOCTORS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_DOCTORS_BY_USER_ID_SUCCESS = \"FETCH_DOCTORS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_DOCTORS_BY_USER_ID_FAILURE = \"FETCH_DOCTORS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_INVITED_DOCTORS_REQUEST = \"FETCH_INVITED_DOCTORS_REQUEST\";\r\nexport const FETCH_INVITED_DOCTORS_SUCCESS = \"FETCH_INVITED_DOCTORS_SUCCESS\";\r\nexport const FETCH_INVITED_DOCTORS_FAILURE = \"FETCH_INVITED_DOCTORS_FAILURE\";\r\n\r\nexport const FETCH_LAST_DOCTOR_REQUEST = \"FETCH_LAST_DOCTOR_REQUEST\";\r\nexport const FETCH_LAST_DOCTOR_SUCCESS = \"FETCH_LAST_DOCTOR_SUCCESS\";\r\nexport const FETCH_LAST_DOCTOR_FAILURE = \"FETCH_LAST_DOCTOR_FAILURE\";","import { FETCH_DOCTORS_REQUEST, FETCH_DOCTORS_SUCCESS, FETCH_DOCTORS_FAILURE, ADD_DOCTOR_REQUEST, ADD_DOCTOR_SUCCESS, ADD_DOCTOR_FAILURE, FETCH_LAST_DOCTOR_REQUEST, FETCH_LAST_DOCTOR_SUCCESS, FETCH_LAST_DOCTOR_FAILURE, FETCH_INVITED_DOCTORS_REQUEST, FETCH_INVITED_DOCTORS_SUCCESS, FETCH_INVITED_DOCTORS_FAILURE } from \"../actions/doctors-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  doctors: [],\r\n  invited_doctors: [],\r\n  lastDoctor: {},\r\n  isLoading: false,\r\n};\r\n\r\nexport const doctorsReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Fetch doctors request\r\n    case FETCH_DOCTORS_REQUEST:\r\n      return { \r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    // Fetch doctors success\r\n    case FETCH_DOCTORS_SUCCESS:\r\n      return { \r\n        ...state,\r\n        doctors: [...action.payload],\r\n        isLoading: false,\r\n      };\r\n    // Fetch doctors failure\r\n    case FETCH_DOCTORS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    // Fetch invited doctors request\r\n    case FETCH_INVITED_DOCTORS_REQUEST:\r\n      return { \r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    // Fetch invited doctors success\r\n    case FETCH_INVITED_DOCTORS_SUCCESS:\r\n      return { \r\n        ...state,\r\n        invited_doctors: [...action.payload],\r\n        isLoading: false,\r\n      };\r\n    // Fetch invited doctors failure\r\n    case FETCH_INVITED_DOCTORS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    // Fetch last doctor request\r\n    case FETCH_LAST_DOCTOR_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    // Fetch last doctor success\r\n    case FETCH_LAST_DOCTOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        lastDoctor: action.payload,\r\n        isLoading: false,\r\n      };\r\n    // Fetch last doctor failure\r\n    case FETCH_LAST_DOCTOR_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    // Add doctor request\r\n    case ADD_DOCTOR_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Add doctor success\r\n    case ADD_DOCTOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        doctors: action.payload,\r\n      };\r\n    // Add doctor failure\r\n    case ADD_DOCTOR_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","export const ADD_LOCALISATION_REQUEST = \"ADD_LOCALISATION_REQUEST\";\r\nexport const ADD_LOCALISATION_SUCCESS = \"ADD_LOCALISATION_SUCCESS\";\r\nexport const ADD_LOCALISATION_FAILURE = \"ADD_LOCALISATION_FAILURE\";\r\n\r\nexport const FETCH_LOCALISATIONS_REQUEST = \"FETCH_LOCALISATIONS_REQUEST\";\r\nexport const FETCH_LOCALISATIONS_SUCCESS = \"FETCH_LOCALISATIONS_SUCCESS\";\r\nexport const FETCH_LOCALISATIONS_FAILURE = \"FETCH_LOCALISATIONS_FAILURE\";\r\n","import { ADD_LOCALISATION_REQUEST, ADD_LOCALISATION_SUCCESS, ADD_LOCALISATION_FAILURE, FETCH_LOCALISATIONS_REQUEST, FETCH_LOCALISATIONS_SUCCESS, FETCH_LOCALISATIONS_FAILURE } from \"../actions/localisations-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  localisations: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const localisationsReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Fetch localisations request\r\n    case FETCH_LOCALISATIONS_REQUEST:\r\n      return { \r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    // Fetch localisations success\r\n    case FETCH_LOCALISATIONS_SUCCESS:\r\n      return { \r\n        ...state,\r\n        localisations: [...action.payload],\r\n        isLoading: false,\r\n      };\r\n    // Fetch localisations failure\r\n    case FETCH_LOCALISATIONS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    // Add localisation request\r\n    case ADD_LOCALISATION_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Add localisation success\r\n    case ADD_LOCALISATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        localisations: action.payload,\r\n      };\r\n    // Add localisation failure\r\n    case ADD_LOCALISATION_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","export const PUSH_NOTIFICATION_REQUEST = \"PUSH_NOTIFICATION_REQUEST\";\r\nexport const PUSH_NOTIFICATION_SUCCESS = \"PUSH_NOTIFICATION_SUCCESS\";\r\nexport const PUSH_NOTIFICATION_FAILURE = \"PUSH_NOTIFICATION_FAILURE\";\r\n\r\nexport const FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST = \"FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST\";\r\nexport const FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS = \"FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS\";\r\nexport const FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE = \"FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE\";\r\n\r\nexport const FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST = \"FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST\";\r\nexport const FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS = \"FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS\";\r\nexport const FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE = \"FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE\";\r\n\r\nexport const FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST = \"FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST\";\r\nexport const FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS = \"FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS\";\r\nexport const FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE = \"FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE\";\r\n\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST = \"MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST\";\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS = \"MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS\";\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE = \"MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE\";\r\n\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST = \"MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST\";\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS = \"MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS\";\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE = \"MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE\";\r\n\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST = \"MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST\";\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS = \"MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS\";\r\nexport const MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE = \"MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE\";","import { FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST, FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS, FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE, FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST, FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS, FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE, FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST, FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS, FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE } from \"../actions/notifications-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  notifications_VM_supervisor: [],\r\n  notifications_DSM_supervisor: [],\r\n  notifications_CDP_supervisor: [],\r\n};\r\n\r\nexport const notificationsReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Fetch notifications by VM supervisor request\r\n    case FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST:\r\n      return { \r\n        ...state,\r\n      };\r\n    // Fetch notifications by VM supervisor success\r\n    case FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS:\r\n      return { \r\n        ...state,\r\n        notifications_VM_supervisor: [...action.payload],\r\n      };\r\n    // Fetch notifications by VM supervisor failure\r\n    case FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch notifications by DSM supervisor request\r\n    case FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST:\r\n      return { \r\n        ...state,\r\n      };\r\n    // Fetch notifications by DSM supervisor success\r\n    case FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS:\r\n      return { \r\n        ...state,\r\n        notifications_DSM_supervisor: [...action.payload],\r\n      };\r\n    // Fetch notifications by DSM supervisor failure\r\n    case FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    // Fetch notifications by CDP supervisor request\r\n    case FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST:\r\n      return { \r\n        ...state,\r\n      };\r\n    // Fetch notifications by CDP supervisor success\r\n    case FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS:\r\n      return { \r\n        ...state,\r\n        notifications_CDP_supervisor: [...action.payload],\r\n      };\r\n    // Fetch notifications by CDP supervisor failure\r\n    case FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","export const ADD_NOTE_REQUEST = \"ADD_NOTE_REQUEST\";\r\nexport const ADD_NOTE_SUCCESS = \"ADD_NOTE_SUCCESS\";\r\nexport const ADD_NOTE_FAILURE = \"ADD_NOTE_FAILURE\";\r\n\r\nexport const FETCH_NOTES_BY_ACTION_SENDER_REQUEST = \"FETCH_NOTES_BY_ACTION_SENDER_REQUEST\";\r\nexport const FETCH_NOTES_BY_ACTION_SENDER_SUCCESS = \"FETCH_NOTES_BY_ACTION_SENDER_SUCCESS\";\r\nexport const FETCH_NOTES_BY_ACTION_SENDER_FAILURE = \"FETCH_NOTES_BY_ACTION_SENDER_FAILURE\";\r\n","import { FETCH_NOTES_BY_ACTION_SENDER_REQUEST, FETCH_NOTES_BY_ACTION_SENDER_SUCCESS, FETCH_NOTES_BY_ACTION_SENDER_FAILURE } from \"../actions/notes-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  notesActionSender: [],\r\n};\r\n\r\nexport const notesReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Fetch notifications by VM supervisor request\r\n    case FETCH_NOTES_BY_ACTION_SENDER_REQUEST:\r\n      return { \r\n        ...state,\r\n      };\r\n    // Fetch notifications by VM supervisor success\r\n    case FETCH_NOTES_BY_ACTION_SENDER_SUCCESS:\r\n      return { \r\n        ...state,\r\n        notesActionSender: [...action.payload],\r\n      };\r\n    // Fetch notifications by VM supervisor failure\r\n    case FETCH_NOTES_BY_ACTION_SENDER_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","export const FETCH_AGENCIES_REQUEST = \"FETCH_AGENCIES_REQUEST\";\r\nexport const FETCH_AGENCIES_SUCCESS = \"FETCH_AGENCIES_SUCCESS\";\r\nexport const FETCH_AGENCIES_FAILURE = \"FETCH_AGENCIES_FAILURE\";\r\n\r\n","import { FETCH_AGENCIES_REQUEST, FETCH_AGENCIES_SUCCESS, FETCH_AGENCIES_FAILURE } from \"../actions/agencies-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  agencies: [],\r\n};\r\n\r\nexport const agenciesReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Fetch agencies request\r\n    case FETCH_AGENCIES_REQUEST:\r\n      return { \r\n        ...state,\r\n      };\r\n    // Fetch agencies success\r\n    case FETCH_AGENCIES_SUCCESS:\r\n      return { \r\n        ...state,\r\n        agencies: action.payload,\r\n      };\r\n    // Fetch agencies failure\r\n    case FETCH_AGENCIES_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","export const FETCH_SERVICES_REQUEST = \"FETCH_SERVICES_REQUEST\";\r\nexport const FETCH_SERVICES_SUCCESS = \"FETCH_SERVICES_SUCCESS\";\r\nexport const FETCH_SERVICES_FAILURE = \"FETCH_SERVICES_FAILURE\";\r\n\r\n","import { FETCH_SERVICES_REQUEST, FETCH_SERVICES_SUCCESS, FETCH_SERVICES_FAILURE } from \"../actions/services-actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  services: [],\r\n};\r\n\r\nexport const servicesReducer = (\r\n  state = INITIAL_STATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Fetch services request\r\n    case FETCH_SERVICES_REQUEST:\r\n      return { \r\n        ...state,\r\n      };\r\n    // Fetch services success\r\n    case FETCH_SERVICES_SUCCESS:\r\n      return { \r\n        ...state,\r\n        services: action.payload,\r\n      };\r\n    // Fetch services failure\r\n    case FETCH_SERVICES_FAILURE:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport  { authReducer }  from \"./authReducer\";\r\nimport  { actionsReducer }  from \"./actionsReducer\";\r\nimport  { doctorsReducer }  from \"./doctorsReducer\";\r\nimport  { localisationsReducer }  from \"./localisationsReducer\";\r\nimport  { notificationsReducer }  from \"./notificationsReducer\";\r\nimport  { notesReducer }  from \"./notesReducer\";\r\nimport  { agenciesReducer }  from \"./agenciesReducer\";\r\nimport  { servicesReducer }  from \"./servicesReducer\";\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n  actionsReducer,\r\n  authReducer,\r\n  doctorsReducer,\r\n  localisationsReducer,\r\n  notificationsReducer,\r\n  notesReducer,\r\n  agenciesReducer,\r\n  servicesReducer,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst logger = createLogger({\r\n  collapsed: true,\r\n  colors: {\r\n    title: () => \"#0B698F\",\r\n    prevState: () => \"#7286E9\",\r\n    action: () => \"#bd2839\",\r\n    nextState: () => \"#1DB954\",\r\n    error: () => \"#FF534D\",\r\n  },\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk, logger));\r\n\r\nexport default store;","import axios from \"axios\";\r\nimport store from \"../store/store\";\r\nimport { logoutAuthUser } from \"../actions/auth-actions/actions\"\r\nimport { history } from \"../index\";\r\n\r\nconst token = localStorage.getItem(\"LinkD\");\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.MIX_API_URL,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  function (config) {\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  function (response) {\r\n    // Do something with response data\r\n    return response;\r\n  },\r\n  function (error) {\r\n    switch (error.response.status) {\r\n      case 401:\r\n        // unauthorized -> token is invalid or expired\r\n        // User must reconnect!\r\n        store.dispatch(logoutAuthUser());\r\n        history.push(\"/login\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import axiosInstance from \"../../config/axios-instance\"\r\n\r\n// Register new user //\r\nfunction registerUser(body) {\r\n    return axiosInstance({\r\n        method: \"post\",\r\n        url: \"/auth/signup\",\r\n        data: body,\r\n    });\r\n}\r\n\r\n// Login user //\r\nfunction loginUser(body) {\r\n    return axiosInstance({\r\n        method: \"post\",\r\n        url: \"/auth/login\",\r\n        data: body,\r\n    });\r\n}\r\n\r\n// Get Authenticated user  //\r\nfunction getAuthUserRequest(user_id) {\r\n    return axiosInstance({\r\n        method: \"post\",\r\n        url: `/auth/:${user_id}`,\r\n        params: {\r\n            user_id: user_id\r\n        },\r\n    });\r\n}\r\n\r\n// Logout user //\r\nfunction logoutUser() {\r\n    return axiosInstance({\r\n        method: \"get\",\r\n        url: \"/auth/logout\",\r\n        data: null,\r\n    });\r\n}\r\n\r\n// Update user profile  //\r\nfunction updateUserProfileRequest(user_id, body) {\r\n    return axiosInstance({\r\n        method: \"post\",\r\n        url: `/auth/editProfile/${user_id}`,\r\n        params: {\r\n            user_id : user_id\r\n        },\r\n        data: body,\r\n    });\r\n}\r\n\r\n// Forgot password  //\r\nfunction forgotPassword(body) {\r\n    return axiosInstance({\r\n        method: \"post\",\r\n        url: \"/auth/forgot/password\",\r\n        data: body,\r\n    });\r\n}\r\n\r\n// Reset password  //\r\nfunction resetPassword(body, resetPasswordToken) {\r\n    return axiosInstance({\r\n        method: \"post\",\r\n        url: `/auth/reset/:${resetPasswordToken}`,\r\n        data: body,\r\n        params: {\r\n            resetPasswordToken: resetPasswordToken\r\n        },\r\n    });\r\n}\r\n\r\n\r\nconst AuthServices = {\r\n    registerUser,\r\n    loginUser,\r\n    getAuthUserRequest,\r\n    logoutUser,\r\n    updateUserProfileRequest,\r\n    forgotPassword,\r\n    resetPassword\r\n};\r\n\r\nexport default AuthServices;\r\n","import { REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE, CONNECT_USER_REQUEST, CONNECT_USER_SUCCESS, CONNECT_USER_FAILURE, GET_AUTH_REQUEST, GET_AUTH_SUCCESS, GET_AUTH_FAILURE, LOGOUT_USER_REQUEST, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILURE, UPDATE_USER_PROFILE_REQUEST, UPDATE_USER_PROFILE_SUCCESS, UPDATE_USER_PROFILE_FAILURE, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILURE, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILURE } from \"./types\";\r\nimport AuthServices from \"./services\";\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n\r\n// Register new user\r\nexport const signupUser = (values) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: REGISTER_USER_REQUEST });\r\n    try {\r\n      const response = await AuthServices.registerUser(values);\r\n      if (response.data.DuplicateAlert) {\r\n        dispatch({\r\n          type: REGISTER_USER_FAILURE,\r\n        })\r\n        toast.error(\"Cette adresse Email est déja utilisée sur un autre compte!\", {\r\n          position: toast.POSITION.TOP_LEFT\r\n        });\r\n      } else {\r\n        dispatch({ type: REGISTER_USER_SUCCESS, payload: { message: \"User added successfully!\", id: response.data.insertId } });\r\n        dispatch(signinUser(values));\r\n        return response.data.insertId;\r\n      }\r\n    } catch (e) {\r\n      dispatch({\r\n        type: REGISTER_USER_FAILURE,\r\n        payload: e.response.data\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Register new user\r\nexport function signinUser(values) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOGIN_USER_REQUEST });\r\n    try {\r\n      const response = await AuthServices.loginUser(values);\r\n      if (response.data.user) {\r\n\r\n        toast.success(\"Bienvenue chez LinkD!\", {\r\n          position: toast.POSITION.TOP_LEFT\r\n        });\r\n        dispatch({ type: LOGIN_USER_SUCCESS, payload: response.data });\r\n        localStorage.setItem(\"LinkD\", response.data.token);\r\n        localStorage.setItem(\"user_id\", response.data.user.user_id);\r\n        dispatch(getAuthUser(response.data.user.user_id));\r\n      } else {\r\n        if (response.data === \"Please verify your email adress\") {\r\n          toast.error(\"Vérifier votre adresse Email SVP!\", {\r\n            position: toast.POSITION.TOP_LEFT\r\n          });\r\n        } else if (response.data === \"Please verify your password\") {\r\n          toast.error(\"Vérifier votre mot de passe SVP!\", {\r\n            position: toast.POSITION.TOP_LEFT\r\n          });\r\n        } else {\r\n          toast.error(\"Error!\", {\r\n            position: toast.POSITION.TOP_LEFT\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      dispatch({\r\n        type: LOGIN_USER_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\nexport function connectUser(token) {\r\n  return async (dispatch) => {\r\n    localStorage.setItem(\"LinkD\", token);\r\n    dispatch({\r\n      type: CONNECT_USER_REQUEST,\r\n    });\r\n    try {\r\n      dispatch({\r\n        type: CONNECT_USER_SUCCESS,\r\n        payload: {\r\n          token: token,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: CONNECT_USER_FAILURE,\r\n        payload: e.response.data\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\nexport function getAuthUser(user_id) {\r\n  return async (dispatch) => {\r\n    await dispatch({\r\n      type: GET_AUTH_REQUEST,\r\n    });\r\n    try {\r\n      const response = await AuthServices.getAuthUserRequest(user_id);\r\n      await dispatch({\r\n        type: GET_AUTH_SUCCESS,\r\n        payload: response.data\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: GET_AUTH_FAILURE,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function logoutAuthUser() {\r\n  return async (dispatch) => {\r\n    await dispatch({\r\n      type: LOGOUT_USER_REQUEST,\r\n    });\r\n    try {\r\n      const response = await AuthServices.logoutUser();\r\n      localStorage.clear();\r\n      await dispatch({\r\n        type: LOGOUT_USER_SUCCESS,\r\n        payload: response.data.message\r\n      });\r\n      window.location.reload()\r\n    } catch (e) {\r\n      dispatch({\r\n        type: LOGOUT_USER_FAILURE,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n// Update user profile\r\nexport function updateUserProfile(user_id, body) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: UPDATE_USER_PROFILE_REQUEST });\r\n    try {\r\n      const response = await AuthServices.updateUserProfileRequest(user_id, body);\r\n        dispatch({ type: UPDATE_USER_PROFILE_SUCCESS, payload: response.data });\r\n        window.location.reload();\r\n    } catch (e) {\r\n      dispatch({\r\n        type: UPDATE_USER_PROFILE_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\nexport function forgotPasswordUser(user_email) {\r\n  return async (dispatch) => {\r\n    await dispatch({\r\n      type: FORGOT_PASSWORD_REQUEST,\r\n    });\r\n    try {\r\n      const response = await AuthServices.forgotPassword(user_email);\r\n      if (response.data.alert) {\r\n        toast.error(\"Cette adresse Email est incorrecte!\", {\r\n          position: toast.POSITION.TOP_LEFT\r\n        });\r\n      } else {\r\n        toast.info(\"Verifier votre boite Gmail SVP!\", {\r\n          position: toast.POSITION.TOP_LEFT\r\n        });\r\n        await dispatch({\r\n          type: FORGOT_PASSWORD_SUCCESS,\r\n          payload: response.data\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FORGOT_PASSWORD_FAILURE,\r\n        payload: e.response.data\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function resetPasswordUser(user_password, resetPasswordToken) {\r\n  return async (dispatch) => {\r\n    await dispatch({\r\n      type: RESET_PASSWORD_REQUEST,\r\n    });\r\n    try {\r\n      const response = await AuthServices.resetPassword(user_password, resetPasswordToken);\r\n      // User credentials \r\n      let values = {\r\n        user_email : response.data.user.user_email,\r\n        user_password : response.data.user.user_password\r\n      }\r\n        await dispatch({\r\n          type: RESET_PASSWORD_SUCCESS,\r\n          payload: response.data\r\n        });\r\n        dispatch(signinUser(values));\r\n    } catch (e) {\r\n      dispatch({\r\n        type: RESET_PASSWORD_FAILURE,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {\r\n    TextField,\r\n} from 'mui-rff';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    Avatar,\r\n    CssBaseline,\r\n    Link,\r\n    Box\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signupUser } from \"../../actions/auth-actions/actions\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Sanofi\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/1600x900/?medecines)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    // Validator for required fields //\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.user_email) {\r\n            errors.user_email = 'Champ requis';\r\n        }\r\n        if (!values.user_password) {\r\n            errors.user_password = 'Champ requis';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Submit Form Group\r\n    const onSubmit = async (values) => {\r\n        dispatch(signupUser(values));\r\n    };\r\n\r\n    // All displayed fields form //\r\n    const formFields = [\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n                    Email : <span className=\"red-star\">*</span>\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field name=\"user_email\">\r\n                    {props => (\r\n                        <div>\r\n                            <TextField\r\n                                label=\"Tapez votre adresse email svp!\"\r\n                                name=\"user_email\"\r\n                                margin=\"none\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} >\r\n                    Mot de passe : <span className=\"red-star\">*</span>\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field name=\"user_password\">\r\n                    {props => (\r\n                        <div>\r\n                            <TextField\r\n                                label=\"Tapez votre mot de passe svp!\"\r\n                                name=\"user_password\"\r\n                                margin=\"none\"\r\n                                type=\"password\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n    ];\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        S'inscrire\r\n                    </Typography>\r\n                    <Form\r\n                        onSubmit={onSubmit}\r\n                        validate={validate}\r\n                        render={({ handleSubmit, form }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Paper style={{ padding: 16 }}>\r\n                                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                                        {formFields.map((item, index) => (\r\n                                            <Grid item xs={item.size} key={index}>\r\n                                                {item.field}\r\n                                            </Grid>\r\n                                        ))}\r\n                                        <Grid item style={{ marginTop: 16 }}>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                variant=\"contained\"\r\n                                                onClick={form.reset}\r\n                                            >\r\n                                                Reinitialiser\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item style={{ marginTop: 16 }}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Créer un compte\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                                <Grid container>\r\n                                    <Grid item>\r\n                                        <Link href=\"/login\" variant=\"body2\">\r\n                                            {\"Connectez vous?\"}\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Box mt={30}>\r\n                                </Box>\r\n                            </form>\r\n                        )}\r\n                    />\r\n                </div>\r\n                <Copyright />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {\r\n    TextField,\r\n} from 'mui-rff';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    Avatar,\r\n    CssBaseline,\r\n    Link,\r\n    Box\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signinUser } from \"../../actions/auth-actions/actions\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Sanofi\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/1600x900/?medecines)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    // Validator for required fields //\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.user_email) {\r\n            errors.user_email = 'Champ requis';\r\n        }\r\n        if (!values.user_password) {\r\n            errors.user_password = 'Champ requis';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Submit Form Group\r\n    const onSubmit = async (values) => {\r\n        dispatch(signinUser(values));\r\n    };\r\n\r\n    // All displayed fields form //\r\n    const formFields = [\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n                    Email : <span className=\"red-star\">*</span>\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field name=\"user_email\">\r\n                    {props => (\r\n                        <div>\r\n                            <TextField\r\n                                label=\"Tapez votre adresse email svp!\"\r\n                                name=\"user_email\"\r\n                                margin=\"none\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} >\r\n                    Mot de passe : <span className=\"red-star\">*</span>\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field name=\"user_password\">\r\n                    {props => (\r\n                        <div>\r\n                            <TextField\r\n                                label=\"Tapez votre mot de passe svp!\"\r\n                                name=\"user_password\"\r\n                                margin=\"none\"\r\n                                type=\"password\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n    ];\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Connexion\r\n                    </Typography>\r\n                    <Form\r\n                        onSubmit={onSubmit}\r\n                        validate={validate}\r\n                        render={({ handleSubmit, form }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Paper style={{ padding: 16 }}>\r\n                                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                                        {formFields.map((item, index) => (\r\n                                            <Grid item xs={item.size} key={index}>\r\n                                                {item.field}\r\n                                            </Grid>\r\n                                        ))}\r\n                                        <Grid item style={{ marginTop: 16 }}>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                variant=\"contained\"\r\n                                                onClick={form.reset}\r\n                                            >\r\n                                                Reinitialiser\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item style={{ marginTop: 16 }}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Se connecter\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                                <Grid container>\r\n                                    <Grid item xs>\r\n                                        <Link href=\"/forgot\" variant=\"body2\">\r\n                                            Mot de passe oublié?\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link href=\"/signup\" variant=\"body2\">\r\n                                            {\"Vous n'avez pas de compte ? Inscrivez vous..\"}\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Box mt={30}>\r\n                                </Box>\r\n                            </form>\r\n                        )}\r\n                    />\r\n                </div>\r\n                <Copyright />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {\r\n    TextField,\r\n} from 'mui-rff';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    Avatar,\r\n    CssBaseline,\r\n} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { forgotPasswordUser } from \"../../actions/auth-actions/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/1600x900/?medecines)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst ForgotPassword = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    // Validator for required fields //\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.user_email) {\r\n            errors.user_email = 'Champ requis';\r\n        }\r\n        return errors;\r\n    };\r\n    // Submit Form Group\r\n    const onSubmit = async (values) => {\r\n        dispatch(forgotPasswordUser(values));\r\n    };\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Connexion\r\n                    </Typography>\r\n                    <Form\r\n                        onSubmit={onSubmit}\r\n                        validate={validate}\r\n                        render={({ handleSubmit, form }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Paper style={{ padding: 16 }}>\r\n                                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                                        <Grid item xs={9}>\r\n                                            <Field name=\"user_email\">\r\n                                                {props => (\r\n                                                    <div>\r\n                                                        <TextField\r\n                                                            label=\"Tapez votre adresse email svp!\"\r\n                                                            name=\"user_email\"\r\n                                                            margin=\"none\"\r\n                                                            type=\"email\"\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </Field>\r\n                                        </Grid>\r\n                                        <Grid item style={{ marginTop: 16 }}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Suivant\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </form>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {\r\n    TextField,\r\n} from 'mui-rff';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    Avatar,\r\n    CssBaseline,\r\n} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetPasswordUser } from \"../../actions/auth-actions/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/1600x900/?medecines)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst resetPasswordToken = window.location.pathname.split(\"/\")[2];\r\nconst ResetPassword = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    // Validator for required fields //\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.user_password) {\r\n            errors.user_password = 'Champ requis';\r\n        }\r\n        return errors;\r\n    };\r\n    // Submit Form Group\r\n    const onSubmit = async (values) => {\r\n        var formData = new FormData(); // Create an instance from formData\r\n        formData.append('values', JSON.stringify(values))\r\n        dispatch(resetPasswordUser(values, resetPasswordToken));\r\n    };\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Connexion\r\n                    </Typography>\r\n                    <Form\r\n                        onSubmit={onSubmit}\r\n                        validate={validate}\r\n                        render={({ handleSubmit, form }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Paper style={{ padding: 16 }}>\r\n                                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                                        <Grid item xs={9}>\r\n                                            <Field name=\"user_password\">\r\n                                                {props => (\r\n                                                    <div>\r\n                                                        <TextField\r\n                                                            label=\"Tapez votre nouveau mot de passe svp!\"\r\n                                                            name=\"user_password\"\r\n                                                            margin=\"none\"\r\n                                                            type=\"password\"\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </Field>\r\n                                        </Grid>\r\n                                        <Grid item style={{ marginTop: 16 }}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Suivant\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </form>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ResetPassword","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col } from \"shards-react\";\r\n\r\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\r\n  const classes = classNames(\r\n    className,\r\n    \"text-center\",\r\n    \"text-md-left\",\r\n    \"mb-sm-0\"\r\n  );\r\n\r\n  return (\r\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\r\n      <h3 className=\"page-title\">{title}</h3>\r\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\r\n    </Col>\r\n  )\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  /**\r\n   * The page title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The page subtitle.\r\n   */\r\n  subtitle: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","import axiosInstance from \"../../config/axios-instance\";\r\n\r\n// Add new action //\r\nfunction addAction(body) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: \"/api/actions\",\r\n    data: body,\r\n    headers: {\r\n      Content_type: \"Multipart/form-data\"\r\n    }\r\n  });\r\n}\r\n\r\n// Fetch all actions //\r\nfunction fetchActions() {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: \"/api/actions\",\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch last action //\r\nfunction fetchLastAction() {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: \"/api/actions/last\",\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch action by Id //\r\nfunction fetchActionById(action_id) {\r\n  return axiosInstance.get(`/api/actions/:${action_id}`, {\r\n    params: {\r\n      action_id: action_id\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch action by user Id //\r\nfunction fetchActionByUserId(user_id) {\r\n  return axiosInstance.get(`/api/actions/user/:${user_id}`, {\r\n    params: {\r\n      user_id: user_id\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch actions by user position //\r\nfunction fetchActionByUserPosition(user_position) {\r\n  return axiosInstance.get(`/api/actions/user/position/:${user_position}`, {\r\n    params: {\r\n      user_position: user_position\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch actions by user status //\r\nfunction fetchActionByStatus(status) {\r\n  return axiosInstance.get(`/api/actions/user/validation/:${status}`, {\r\n    params: {\r\n      status: status\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch VM actions by user id //\r\nfunction fetchVMActionByUserId(user_id) {\r\n  return axiosInstance.get(`/api/actions/user/VM/actions/:${user_id}`, {\r\n    params: {\r\n      user_id: user_id\r\n    },\r\n  })\r\n}\r\n// Fetch VM actions by user id //\r\nfunction fetchVMValidatedActionByUserId(user_id) {\r\n  return axiosInstance.get(`/api/actions/user/VM/validated/actions/:${user_id}`, {\r\n    params: {\r\n      user_id: user_id\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch DSM validated actions by user id //\r\nfunction fetchDSMValidatedActionByUserId(user_id) {\r\n  return axiosInstance.get(`/api/actions/user/validation/DSMvalidated/:${user_id}`, {\r\n    params: {\r\n      user_id: user_id\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch CDP validated actions by user id //\r\nfunction fetchCDPValidatedActionByUserId(user_id) {\r\n  return axiosInstance.get(`/api/actions/user/validation/CDPvalidated/:${user_id}`, {\r\n    params: {\r\n      user_id: user_id\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch DSM rejected actions by user id //\r\nfunction fetchDSMRejectedActionByUserId(user_id) {\r\n  return axiosInstance.get(`/api/actions/user/rejection/DSMrejected/:${user_id}`, {\r\n    params: {\r\n      user_id: user_id\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch CDP rejected actions by user id //\r\nfunction fetchCDPRejectedActionByUserId(user_id) {\r\n  return axiosInstance.get(`/api/actions/user/rejection/CDPrejected/:${user_id}`, {\r\n    params: {\r\n      user_id: user_id\r\n    },\r\n  })\r\n}\r\n\r\n// Fetch Speaker actions by user id //\r\nfunction fetchSpeakerAction() {\r\n  return axiosInstance.get(`/api/actions/user/validation/DSMvalidated/speaker`)\r\n}\r\n\r\n\r\n// Update action by Id //\r\nfunction updateActionById(action_id, body) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/:${action_id}`,\r\n    data: body,\r\n    params: {\r\n      action_id: action_id\r\n    }\r\n  })\r\n}\r\n\r\n// Validate VM action by Id //\r\nfunction validateVMStatusActionById(action_id, user_email, user_id, action_sender, DSM_supervisor, CDP_supervisor) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/VMvalidated`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_email : user_email,\r\n      user_id : user_id,\r\n      action_sender : action_sender,\r\n      DSM_supervisor : DSM_supervisor,\r\n      CDP_supervisor : CDP_supervisor,\r\n    }\r\n  })\r\n}\r\n\r\n// Validate DSM action by Id //\r\nfunction validateDSMStatusActionById(action_id, user_email, user_id, action_sender) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/DSMvalidated`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_email : user_email,\r\n      user_id : user_id,\r\n      action_sender : action_sender\r\n    }\r\n  })\r\n}\r\n\r\n// Validate DSM action by Id //\r\nfunction validateDSMSpeakerStatusActionById(action_id, user_email, user_id, action_sender) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/DSMSpeakervalidated`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_email : user_email,\r\n      user_id : user_id,\r\n      action_sender : action_sender\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// Validate VM action by Id //\r\nfunction validateCDPFirstStatusActionById(action_id, user_email, user_id, action_sender) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/CDPvalidated/first`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_email : user_email,\r\n      user_id : user_id,\r\n      action_sender : action_sender,\r\n    }\r\n  })\r\n}\r\n\r\n// Validate VM action by Id //\r\nfunction validateCDPStatusActionById(action_id, user_email, user_id, action_sender) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/CDPvalidated`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_email : user_email,\r\n      user_id : user_id,\r\n      action_sender : action_sender,\r\n    }\r\n  })\r\n}\r\n\r\n// Validate VM action by Id //\r\nfunction validateMEDFirstStatusActionById(action_id, user_email, user_id, action_sender) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/MEDvalidated/first`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_email : user_email,\r\n      user_id : user_id,\r\n      action_sender : action_sender,\r\n    }\r\n  })\r\n}\r\n\r\n// Validate VM action by Id //\r\nfunction validateMEDStatusActionById(action_id, user_email, user_id, action_sender) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/MEDvalidated`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_email : user_email,\r\n      user_id : user_id,\r\n      action_sender : action_sender,\r\n    }\r\n  })\r\n}\r\n\r\n// Reject DSM action by Id //\r\nfunction denyDSMStatusActionById(action_id, user_id) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/DSMdenied`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_id: user_id,\r\n    }\r\n  })\r\n}\r\n\r\n// Reject CDP action by Id //\r\nfunction denyCDPStatusActionById(action_id, user_id) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/CDPdenied`,\r\n    params: {\r\n      action_id: action_id,\r\n      user_id: user_id\r\n    }\r\n  })\r\n}\r\n\r\n// Remove VM action by Id //\r\nfunction deleteActionById(action_id) {\r\n  return axiosInstance.delete(`/api/actions/:${action_id}`, {\r\n    params: {\r\n      action_id: action_id\r\n    }\r\n  })\r\n}\r\n\r\n// Return VM action by Id //\r\nfunction returnActionByIdRequest(action_id) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/returned/:${action_id}`,\r\n    params: {\r\n      action_id: action_id,\r\n    }\r\n  })\r\n}\r\n\r\n// Messaging validation user //\r\nfunction messagingValidationRequest(to) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/twilio/messaging/validation`,\r\n    data: {\r\n      to: to,\r\n    }\r\n  })\r\n}\r\n\r\n// Messaging rejection user //\r\nfunction messagingRejectionRequest(to) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/twilio/messaging/rejection`,\r\n    data: {\r\n      to: to,\r\n    }\r\n  })\r\n}\r\n\r\n// Services after validation //\r\nfunction validateServicesRequest(values, action) {\r\n  console.log(values)\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/actions/user/CDPvalidated/services`,\r\n    data: {\r\n      values,\r\n      action\r\n    },\r\n  })\r\n}\r\n\r\nconst ActionsServices = {\r\n  fetchActions,\r\n  addAction,\r\n  fetchLastAction,\r\n  fetchActionById,\r\n  fetchActionByUserId,\r\n  fetchActionByUserPosition,\r\n  fetchActionByStatus,\r\n  fetchVMActionByUserId,\r\n  fetchVMValidatedActionByUserId,\r\n  fetchDSMValidatedActionByUserId,\r\n  validateDSMSpeakerStatusActionById,\r\n  fetchCDPValidatedActionByUserId,\r\n  fetchDSMRejectedActionByUserId,\r\n  fetchCDPRejectedActionByUserId,\r\n  fetchSpeakerAction,\r\n  updateActionById,\r\n  validateDSMStatusActionById,\r\n  validateVMStatusActionById,\r\n  validateCDPStatusActionById,\r\n  validateMEDFirstStatusActionById,\r\n  validateMEDStatusActionById,\r\n  denyDSMStatusActionById,\r\n  denyCDPStatusActionById,\r\n  validateCDPFirstStatusActionById,\r\n  deleteActionById,\r\n  returnActionByIdRequest,\r\n  messagingValidationRequest,\r\n  messagingRejectionRequest,\r\n  validateServicesRequest\r\n};\r\n\r\nexport default ActionsServices;","import { FETCH_ACTIONS_REQUEST, FETCH_ACTIONS_SUCCESS, FETCH_ACTIONS_FAILURE, ADD_ACTION_REQUEST, ADD_ACTION_SUCCESS, ADD_ACTION_FAILURE, FETCH_LAST_ACTION_REQUEST, FETCH_LAST_ACTION_SUCCESS, FETCH_LAST_ACTION_FAILURE, FETCH_ACTION_BY_ID_REQUEST, FETCH_ACTION_BY_ID_SUCCESS, FETCH_ACTION_BY_ID_FAILURE, FETCH_ACTION_BY_USER_ID_REQUEST, FETCH_ACTION_BY_USER_ID_SUCCESS, FETCH_ACTION_BY_USER_ID_FAILURE, FETCH_ACTION_BY_USER_POSITION_REQUEST, FETCH_ACTION_BY_USER_POSITION_SUCCESS, FETCH_ACTION_BY_USER_POSITION_FAILURE, FETCH_ACTION_BY_STATUS_REQUEST, FETCH_ACTION_BY_STATUS_SUCCESS, FETCH_ACTION_BY_STATUS_FAILURE, FETCH_VM_ACTIONS_BY_USER_ID_REQUEST, FETCH_VM_ACTIONS_BY_USER_ID_SUCCESS, FETCH_VM_ACTIONS_BY_USER_ID_FAILURE, FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST, FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE, FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST, FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE, FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_REQUEST, FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_FAILURE, FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_REQUEST, FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_FAILURE, FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_REQUEST, FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_SUCCESS, FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_FAILURE, FETCH_SPEAKER_ACTIONS_BY_USER_ID_REQUEST, FETCH_SPEAKER_ACTIONS_BY_USER_ID_SUCCESS, FETCH_SPEAKER_ACTIONS_BY_USER_ID_FAILURE, UPDATE_ACTION_BY_ID_REQUEST, UPDATE_ACTION_BY_ID_SUCCESS, UPDATE_ACTION_BY_ID_FAILURE, VALIDATE_DSM_STATUS_ACTION_BY_ID_REQUEST, VALIDATE_DSM_STATUS_ACTION_BY_ID_SUCCESS, VALIDATE_DSM_STATUS_ACTION_BY_ID_FAILURE, VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_REQUEST, VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_SUCCESS, VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_FAILURE, VALIDATE_VM_STATUS_ACTION_BY_ID_REQUEST, VALIDATE_VM_STATUS_ACTION_BY_ID_SUCCESS, VALIDATE_VM_STATUS_ACTION_BY_ID_FAILURE, VALIDATE_CDP_STATUS_ACTION_BY_ID_REQUEST, VALIDATE_CDP_STATUS_ACTION_BY_ID_SUCCESS, VALIDATE_CDP_STATUS_ACTION_BY_ID_FAILURE, VALIDATE_MED_STATUS_ACTION_BY_ID_REQUEST, VALIDATE_MED_STATUS_ACTION_BY_ID_SUCCESS, VALIDATE_MED_STATUS_ACTION_BY_ID_FAILURE, VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_REQUEST, VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_SUCCESS, VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_FAILURE,  VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_REQUEST, VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_SUCCESS, VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_FAILURE, DENY_STATUS_DSM_ACTION_BY_ID_REQUEST,  DENY_STATUS_DSM_ACTION_BY_ID_SUCCESS, DENY_STATUS_DSM_ACTION_BY_ID_FAILURE, DENY_STATUS_CDP_ACTION_BY_ID_REQUEST, DENY_STATUS_CDP_ACTION_BY_ID_SUCCESS, DENY_STATUS_CDP_ACTION_BY_ID_FAILURE, DELETE_ACTION_BY_ID_REQUEST, DELETE_ACTION_BY_ID_SUCCESS, DELETE_ACTION_BY_ID_FAILURE, RETURN_ACTION_BY_ID_REQUEST, RETURN_ACTION_BY_ID_SUCCESS, RETURN_ACTION_BY_ID_FAILURE, MESSAGING_VALIDATION_REQUEST, MESSAGING_VALIDATION_SUCCESS, MESSAGING_VALIDATION_FAILURE, MESSAGING_REJECTION_REQUEST, MESSAGING_REJECTION_SUCCESS, MESSAGING_REJECTION_FAILURE, SERVICES_REQUEST, SERVICES_SUCCESS, SERVICES_FAILURE } from \"./types\";\r\nimport ActionsServices from \"./services\";\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n\r\n// Retrieve all actions\r\nexport function getActions() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_ACTIONS_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchActions();\r\n      dispatch({ type: FETCH_ACTIONS_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_ACTIONS_FAILURE,\r\n        payload: e.response.dat\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve last action\r\nexport function getLastAction() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_LAST_ACTION_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchLastAction();\r\n      dispatch({ type: FETCH_LAST_ACTION_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_LAST_ACTION_FAILURE,\r\n        payload: e.response.data\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Add action\r\nexport function addAction(values) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: ADD_ACTION_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.addAction(values);\r\n      dispatch({ type: ADD_ACTION_SUCCESS, payload: { message: \"Action added successfully!\", id: response.data.insertId } });\r\n      return response.data.insertId;\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ADD_ACTION_FAILURE,\r\n        payload: e.response.data\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve action by Id\r\nexport function getActionById(action_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchActionById(action_id);\r\n      dispatch({ type: FETCH_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve action by Id\r\nexport function getActionByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_ACTION_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchActionByUserId(user_id);\r\n      dispatch({ type: FETCH_ACTION_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_ACTION_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve action by user position\r\nexport function getActionByUserPosition(user_position) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_ACTION_BY_USER_POSITION_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchActionByUserPosition(user_position);\r\n      dispatch({ type: FETCH_ACTION_BY_USER_POSITION_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_ACTION_BY_USER_POSITION_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve action by status\r\nexport function getActionByStatus(status) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_ACTION_BY_STATUS_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchActionByStatus(status);\r\n      dispatch({ type: FETCH_ACTION_BY_STATUS_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_ACTION_BY_STATUS_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve VM actions by user ID\r\nexport function getVMActionsByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_VM_ACTIONS_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchVMActionByUserId(user_id);\r\n      dispatch({ type: FETCH_VM_ACTIONS_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_VM_ACTIONS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve VM validated actions by user ID\r\nexport function getVMValidatedActionsByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchVMValidatedActionByUserId(user_id);\r\n      dispatch({ type: FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_VM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve Validated DSM actions by user ID\r\nexport function getDSMValidatedActionsByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchDSMValidatedActionByUserId(user_id);\r\n      dispatch({ type: FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_DSM_VALIDATED_ACTIONS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n// Retrieve Validated CDP actions by user ID\r\nexport function getCDPValidatedActionsByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchCDPValidatedActionByUserId(user_id);\r\n      dispatch({ type: FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_CDP_VALIDATED_ACTIONS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve Rejected DSM actions by user ID\r\nexport function getDSMRejectedActionsByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchDSMRejectedActionByUserId(user_id);\r\n      dispatch({ type: FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_DSM_REJECTED_ACTIONS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n// Retrieve Rejected CDP actions by user ID\r\nexport function getCDPRejectedActionsByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchCDPRejectedActionByUserId(user_id);\r\n      dispatch({ type: FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_CDP_REJECTED_ACTIONS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve Speaker actions by user ID\r\nexport function getSpeakerActions() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_SPEAKER_ACTIONS_BY_USER_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.fetchSpeakerAction();\r\n      dispatch({ type: FETCH_SPEAKER_ACTIONS_BY_USER_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_SPEAKER_ACTIONS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Update action by Id\r\nexport function modifyActionById(action_id, values) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: UPDATE_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.updateActionById(action_id, values);\r\n      dispatch({ type: UPDATE_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: UPDATE_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Validate pending VM action by Id\r\nexport function validateVMActionById(action_id, user_email, user_id, action_sender, DSM_supervisor, CDP_supervisor) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: VALIDATE_VM_STATUS_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateVMStatusActionById(action_id, user_email, user_id, action_sender, DSM_supervisor, CDP_supervisor);\r\n      dispatch({ type: VALIDATE_VM_STATUS_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.success(`Votre action a été validée avec success et en attente de validation DSM , Veuillez vérifier votre boite email ${action_sender} SVP...`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: VALIDATE_VM_STATUS_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Validate pending DSM action by Id\r\nexport function validateDSMActionById(action_id, user_email, user_id, action_sender) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: VALIDATE_DSM_STATUS_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateDSMStatusActionById(action_id, user_email, user_id, action_sender);\r\n      dispatch({ type: VALIDATE_DSM_STATUS_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.success(`Action validée avec success et en attente de validation CDP, Un email a été envoyée au demandeur d'action sur l'adresse e-mail ${action_sender}`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: VALIDATE_DSM_STATUS_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Validate pending DSM speaker action by Id\r\nexport function validateDSMSpeakerActionById(action_id, user_email, user_id, action_sender) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateDSMSpeakerStatusActionById(action_id, user_email, user_id, action_sender);\r\n      dispatch({ type: VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.success(`Action validée avec success et en attente de validation CDP et MED, Un email a été envoyée au demandeur d'action sur l'adresse e-mail ${action_sender}`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: VALIDATE_DSM_SPEAKER_STATUS_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Validate pending CDP action by Id\r\nexport function validateCDPFirstActionById(action_id, user_email, user_id, action_sender) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateCDPFirstStatusActionById(action_id, user_email, user_id, action_sender);\r\n      dispatch({ type: VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.success(`Action validée avec success, Un email a été envoyée au demandeur d'action sur l'adresse e-mail ${action_sender}`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: VALIDATE_CDP_FIRST_STATUS_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Validate pending CDP action by Id\r\nexport function validateCDPActionById(action_id, user_email, user_id, action_sender) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: VALIDATE_CDP_STATUS_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateCDPStatusActionById(action_id, user_email, user_id, action_sender);\r\n      dispatch({ type: VALIDATE_CDP_STATUS_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.success(`Action validée avec success, Un email a été envoyée au demandeur d'action sur l'adresse e-mail ${action_sender}`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: VALIDATE_CDP_STATUS_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Validate pending MED action by Id\r\nexport function validateMEDFirstActionById(action_id, user_email, user_id, action_sender) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateMEDFirstStatusActionById(action_id, user_email, user_id, action_sender);\r\n      dispatch({ type: VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.success(`Action validée avec success, Un email a été envoyée au demandeur d'action sur l'adresse e-mail ${action_sender}`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: VALIDATE_MED_FIRST_STATUS_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Validate pending MED action by Id\r\nexport function validateMEDActionById(action_id, user_email, user_id, action_sender) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: VALIDATE_MED_STATUS_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateMEDStatusActionById(action_id, user_email, user_id, action_sender);\r\n      dispatch({ type: VALIDATE_MED_STATUS_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.success(`Action validée avec success, Un email a été envoyée au demandeur d'action sur l'adresse e-mail ${action_sender}`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: VALIDATE_MED_STATUS_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Deny pending DSM action by Id\r\nexport function denyDSMActionById(action_id, user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: DENY_STATUS_DSM_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.denyDSMStatusActionById(action_id, user_id);\r\n      dispatch({ type: DENY_STATUS_DSM_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.error(\"Action rejetée avec success!\", {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 1000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: DENY_STATUS_DSM_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Deny pending CDP action by Id\r\nexport function denyCDPActionById(action_id, user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: DENY_STATUS_CDP_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.denyCDPStatusActionById(action_id, user_id);\r\n      dispatch({ type: DENY_STATUS_CDP_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.error(\"Action rejetée avec success!\", {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 1000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: DENY_STATUS_CDP_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Remove VM action by Id\r\nexport function removeActionById(action_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: DELETE_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.deleteActionById(action_id);\r\n      dispatch({ type: DELETE_ACTION_BY_ID_SUCCESS, payload: response.data });\r\n      toast.error(\"Votre action a été retirée avec success!\", {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      setInterval(() => {\r\n        window.location.reload();\r\n      }, 1000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: DELETE_ACTION_BY_ID_FAILURE,\r\n        payload: e.response.data\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Return VM action by Id\r\nexport function returnActionById(action_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: RETURN_ACTION_BY_ID_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.returnActionByIdRequest(action_id);\r\n        window.location.reload();\r\n      dispatch({ type: RETURN_ACTION_BY_ID_SUCCESS });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: RETURN_ACTION_BY_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Messaging user\r\nexport function messagingValidation(to) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: MESSAGING_VALIDATION_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.messagingValidationRequest(to);\r\n      dispatch({ type: MESSAGING_VALIDATION_SUCCESS });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: MESSAGING_VALIDATION_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Messaging user\r\nexport function messagingRejection(to) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: MESSAGING_REJECTION_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.messagingRejectionRequest(to);\r\n      dispatch({ type: MESSAGING_REJECTION_SUCCESS });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: MESSAGING_REJECTION_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Services after action validated\r\nexport function validateservices(values, action) {\r\n  console.log(values)\r\n  return async (dispatch) => {\r\n    dispatch({ type: SERVICES_REQUEST });\r\n    try {\r\n      const response = await ActionsServices.validateServicesRequest(values, action);\r\n      dispatch({ type: SERVICES_SUCCESS, payload: response.data });\r\n      toast.success(`Veuillez vérifier votre adresse email SVP ..`, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      // setInterval(() => {\r\n      //   window.location.reload();\r\n      // }, 3000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: SERVICES_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axiosInstance from \"../../config/axios-instance\";\r\n\r\n// Fetch all localisations //\r\nfunction fetchLocalisations() {\r\n    return axiosInstance({\r\n      method: \"get\",\r\n      url: \"/api/localisations\",\r\n      data: null,\r\n    });\r\n  }\r\n\r\n// Add new localisation //\r\nfunction addLocalisation(body) {\r\n    return axiosInstance({\r\n      method: \"post\",\r\n      url: \"/api/localisations\",\r\n      data: body,\r\n    });\r\n  }\r\n\r\n  const LocalisationsServices = {\r\n    fetchLocalisations,\r\n    addLocalisation,\r\n  };\r\n  \r\n  export default LocalisationsServices;","import axiosInstance from \"../../config/axios-instance\";\r\n\r\n// Fetch all doctors //\r\nfunction fetchDoctors() {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: \"/api/doctors\",\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch last doctor //\r\nfunction fetchLastDoctor() {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: \"/api/doctors/last\",\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch doctors by user id //\r\nfunction fetchDoctorsByUserId(user_id) {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: `/api/doctors/VMsupervisors/:${user_id}`,\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch invited doctors //\r\nfunction fetchInvitedDoctors(doctor_name) {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: `/api/doctors/invited`,\r\n    params: {\r\n      doctor_name: doctor_name,\r\n    },\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Add new doctor //\r\nfunction addDoctor(body) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: \"/api/doctors\",\r\n    data: body,\r\n  });\r\n}\r\n\r\nconst DoctorsServices = {\r\n  fetchDoctors,\r\n  fetchLastDoctor,\r\n  fetchDoctorsByUserId,\r\n  fetchInvitedDoctors,\r\n  addDoctor,\r\n};\r\n\r\nexport default DoctorsServices;","import React, { useEffect, useState } from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  Select,\r\n} from 'mui-rff';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { Row } from \"shards-react\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAction, modifyActionById } from \"../actions/actions-initiation-actions/actions\";\r\nimport { getLocalisations } from \"../actions/localisations-actions/actions\";\r\nimport { getDoctors } from \"../actions/doctors-actions/actions\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { Hint } from 'react-autocomplete-hint';\r\nimport $ from \"jquery\";\r\n\r\nconst ActionsInitiation = () => {\r\n  const [FilteredDoctors, setFilteredDoctors] = useState([]);\r\n  const [FilteredGeoLocalisation, setFilteredGeoLocalisation] = useState([]);\r\n  const [File, setFile] = useState([]);\r\n  const [Count, setCount] = useState(0);\r\n  const [StartAction, setStartAction] = useState(\"\");\r\n  const [EndAction, setEndAction] = useState(\"\");\r\n  const [Speaker, setSpeaker] = useState(\"0\");\r\n  const [SpeakerTransfer, setSpeakerTransfer] = useState(\"0\");\r\n  const [SpeakerAccommodation, setSpeakerAccommodation] = useState(\"0\");\r\n  const [Text, setText] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // User state from redux store\r\n  const user = useSelector(\r\n    (state) => state.authReducer.user[0]\r\n  );\r\n  // Action state from redux store\r\n  const action = useSelector(\r\n    (state) => state.actionsReducer.action\r\n  );\r\n  // Doctors state from redux store\r\n  const doctors = useSelector(\r\n    (state) => state.doctorsReducer.doctors\r\n  );\r\n  // Loading state from redux store\r\n  const isLoading = useSelector(\r\n    (state) => state.doctorsReducer.isLoading\r\n  );\r\n  // Localisations state from redux store\r\n  const localisations = useSelector(\r\n    (state) => state.localisationsReducer.localisations\r\n  );\r\n\r\n  // Dummy data => API's later //\r\n  const products = [\r\n    \"productA\",\r\n    \"productB\",\r\n    \"productC\",\r\n    \"productD\",\r\n    \"productE\",\r\n    \"productF\",\r\n  ];\r\n\r\n  const speciality = [\r\n    'Chirugien',\r\n    'Médecin Général',\r\n    'Neuphrologie',\r\n    'Médecin de travail',\r\n    'Generaliste',\r\n    \"Médecin enfant\"\r\n  ];\r\n\r\n  const location = [\r\n    \"Ras Djbal: Bizerte\",\r\n    \"Ain Mariem: Bizerte\",\r\n    \"Ain midoun: Medenine\",\r\n    \"Djerba: Medenine\",\r\n    \"Sers: Le Kef\",\r\n    \"Tejrouine: Le Kef\",\r\n    \"Hay tahrir: Tunis\"\r\n  ];\r\n  // Dummy data => API's later //\r\n\r\n  //  Global variables //\r\n  var filter = [];\r\n  var filteredDoctors = [];\r\n  var filteredGeolocalisation = [];\r\n  //  Global variables //\r\n\r\n  // Function to handle Filter of doctors\r\n  const handleFilteredDoctors = () => {\r\n    var counter = 0;\r\n    setFilteredDoctors(doctors); // Set all available doctors data\r\n    var options = $(\".MuiSelect-select.MuiSelect-select[name='action_field'] option:selected\");\r\n    options.each((index, element) => {\r\n      filter.push(element.value);\r\n    })\r\n    console.log(FilteredDoctors)\r\n    for (var k = 0; k < filter.length; k++) {\r\n      for (var l = 0; l < doctors.length; l++) {\r\n        if (filter[k].includes(doctors[l].doctor_field)) {\r\n          filteredDoctors = filteredDoctors.concat(doctors.filter(element => element.doctor_field === filter[k])) // Concat all object that correspond to the condition\r\n          filteredDoctors = filteredDoctors.filter((item, index) => filteredDoctors.indexOf(item) === index); // Avoid duplicated objects\r\n          setFilteredDoctors(filteredDoctors); // Hook filtered doctors to local state\r\n        } else if (!filter[k].includes(doctors[l].doctor_field)) {\r\n          counter++;\r\n          if (counter === doctors.length) {\r\n            setFilteredDoctors([]); // None selected value\r\n          } else {\r\n            setFilteredDoctors(filteredDoctors); // Hook filtered doctors to local state\r\n          }\r\n        } else {\r\n          setFilteredDoctors([]); // None of conditions\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to count invited_doctors\r\n  const handleNumberDoctors = () => {\r\n    var counter = $(\"#invited_doctors option:selected\").length; // Selected options length\r\n    setCount(counter); // Hook number of invited doctors to local state\r\n  }\r\n\r\n  // Function to handle Filter geolocalisation\r\n  const handleFilteredGeolocalisation = () => {\r\n    setFilteredGeoLocalisation([]); // Clear data\r\n    $(document).ready(() => {\r\n      var element = $(\".MuiList-padding\");\r\n      for (var i = 0; i < element[0].children.length; i++) {\r\n        for (var j = 0; j < location.length; j++) {\r\n          if (element[0].children[i].selected && element[0].children[i].value === location[j].split(': ').pop()) {\r\n            filteredGeolocalisation = filteredGeolocalisation.concat(location[j])\r\n            setFilteredGeoLocalisation(filteredGeolocalisation); // Hook filtered localisation to local state\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to handle Search //\r\n  const handleSearch = (e) => {\r\n    e.preventDefault(); // Prevent default behavior\r\n    var text = \"\";\r\n    setText(e.target.value); // Set text of user to local state\r\n    if (Text.length) {\r\n      text = Text.toLowerCase(); // Transform all text type to lowcase\r\n      for (var i = 0; i < FilteredDoctors.length; i++) {\r\n        if (FilteredDoctors[i].doctor_lname.trim().toLowerCase().indexOf(text) !== -1 || FilteredDoctors[i].doctor_fname.trim().toLowerCase().indexOf(text) !== -1 || FilteredDoctors[i].doctor_field.trim().toLowerCase().indexOf(text) !== -1) {\r\n          filteredDoctors.push(FilteredDoctors[i]);\r\n          setFilteredDoctors(filteredDoctors); // Hook filtered doctors to local state\r\n        }\r\n      }\r\n    }\r\n    if (e.target.value.length === 0) {\r\n      handleFilteredDoctors(); // Execute function to filter displayed doctors\r\n    }\r\n  }\r\n\r\n  const onFileChange = function (e) {\r\n    setFile(e.target.files[0]); // Hook file to local state\r\n  }\r\n\r\n  // Function to display extra inputs\r\n  const toggleRadioButton = () => {\r\n    var element = $(\".extra-speaker-elements\");\r\n    element.toggle();\r\n  }\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  // Validator for required fields //\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.action_type) {\r\n      errors.action_type = 'Champ requis';\r\n    }\r\n    if (!values.start_action) {\r\n      errors.start_action = 'Champ requis';\r\n    }\r\n    if (!values.schedule) {\r\n      errors.schedule = 'Champ requis';\r\n    }\r\n    if (!values.action_town) {\r\n      errors.action_town = 'Champ requis';\r\n    }\r\n    if (!values.action_location) {\r\n      errors.action_location = 'Champ requis';\r\n    }\r\n    if (!values.product) {\r\n      errors.product = 'Champ requis';\r\n    }\r\n    if (!values.meeting_theme) {\r\n      errors.meeting_theme = 'Champ requis';\r\n    }\r\n    if (!values.pax_number) {\r\n      errors.pax_number = 'Champ requis';\r\n    }\r\n    if (!values.invited_doctors) {\r\n      errors.invited_doctors = 'Champ requis';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  // Submit Form Group inputs\r\n  const onSubmit = async (values) => {\r\n    const formData = new FormData(); // Create an instance of FormData\r\n    if (!values.end_action) {\r\n      values.end_action = '2021-12-31'\r\n    }\r\n    if (!values.comments) {\r\n      values.comments = 'Non spécifié';\r\n    }\r\n    if (!values.speaker_suggestion) {\r\n      values.speaker_suggestion = 'Non spécifié';\r\n    }\r\n    if (!values.other_location) {\r\n      values.other_location = 'Non spécifié';\r\n    }\r\n    if (!values.other_doctors) {\r\n      values.other_doctors = 'Non spécifié';\r\n    }\r\n    if (!values.other_stuff) {\r\n      values.other_stuff = 'Non spécifié';\r\n    }\r\n    values.user_id = user.user_id;\r\n    values.user_email = user.user_email;\r\n    values.DSM_supervisor = user.DSM_supervisor;\r\n    values.user_position = user.user_position;\r\n    values.user_email = user.user_email;\r\n    values.speaker = parseInt(Speaker); // Parse string type to integer\r\n    values.speaker_transfer = parseInt(SpeakerTransfer); // Parse string type to integer\r\n    values.speaker_accommodation = parseInt(SpeakerAccommodation); // Parse string type to integer\r\n    if (File.name) {\r\n      formData.append(\"file\", File, File.name); // Append file to formData\r\n      formData.append(\"values\", JSON.stringify(values)); // Append all data except file upload to formData\r\n    } else {\r\n      formData.append(\"values\", JSON.stringify(values)); // Append all data except file upload to formData\r\n    }\r\n    if (action.action_id) {\r\n      dispatch(modifyActionById(action.action_id, formData));\r\n      history.push(`/display-action/${action.action_id}`); // Redirect user after update of form\r\n    } else {\r\n      const insertedActionId = await dispatch(addAction(formData)); // Dispatch post action\r\n      if (insertedActionId) {\r\n        history.push(`/display-action/${insertedActionId}`); // Redirect user after submition of form\r\n      }\r\n    }\r\n  };\r\n  // Component on mount //\r\n  useEffect(() => {\r\n    dispatch(getDoctors()); // Dispatch get action of all doctors \r\n    dispatch(getLocalisations()); // Dispatch get action of localisations\r\n  }, [dispatch])\r\n  useEffect(() => {\r\n    var element = $(\".extra-speaker-elements\");\r\n    element.hide();\r\n      if (action.start_action) {\r\n        setStartAction(action.start_action.split(\"T\").shift());\r\n      }\r\n      if (action.end_action) {\r\n        setEndAction(action.end_action.split(\"T\").shift());\r\n    }\r\n    if (action.action_id) {\r\n      setFilteredGeoLocalisation([action.action_location]);\r\n      var invitedDoctors = action.invited_doctors.split(\",\");\r\n      for (var i = 0; i < doctors.length; i++) {\r\n        for (var j = 0; j < invitedDoctors.length; j++) {\r\n          if ((doctors[i].doctor_lname + \" \" + doctors[i].doctor_fname) === invitedDoctors[j]) {\r\n            filteredDoctors.push(doctors[i]);\r\n            setFilteredDoctors(filteredDoctors); // Hook filtered doctors to local state\r\n            setCount(filteredDoctors.length); // Hook number of invited doctors to local state\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      setFilteredDoctors(doctors); // Hook all available doctors to local state\r\n    }\r\n  }, [doctors, localisations, action])\r\n  // Component on mount //\r\n  // All displayed fields form //\r\n  const formFields = [\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Type d’action : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"action_type\" initialValue={action.action_type}>\r\n          {props => (\r\n            <div>\r\n              <Select\r\n                name=\"action_type\"\r\n                label=\"Selectionner le type d'action\"\r\n                formControlProps={{ margin: 'none' }}\r\n                type=\"select\"\r\n              >\r\n                <MenuItem value=\"Congré National\">Congrés National</MenuItem>\r\n                <MenuItem value=\"Congrés International\">Congrés International</MenuItem>\r\n                <MenuItem value=\"Simosium National\">Simosium National</MenuItem>\r\n                <MenuItem value=\"Simosium International\">Simosium International</MenuItem>\r\n                <MenuItem value=\"Projet\">Projet</MenuItem>\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Autre staff Sanofi :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"other_stuff\" initialValue={action.other_stuff}>\r\n          {props => (\r\n            <div>\r\n              <Select\r\n                name=\"other_stuff\"\r\n                label=\"Selectionner\"\r\n                formControlProps={{ margin: 'none' }}\r\n                type=\"select\"\r\n              >\r\n                <MenuItem value=\"Staff\">Staff</MenuItem>\r\n                <MenuItem value=\"TR\">TR</MenuItem>\r\n                <MenuItem value=\"EPU\">EPU</MenuItem>\r\n                <MenuItem value=\"Atelier\">Atelier</MenuItem>\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Date début de l’action : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field:\r\n        <Field name=\"start_action\" initialValue={StartAction}>\r\n          {props => (\r\n            <div>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <TextField\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  name=\"start_action\"\r\n                  InputProps={{inputProps: { min: new Date().toLocaleDateString().split('/').reverse().join('-') } }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          )}\r\n        </Field>\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Date fin de l’action :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field:\r\n        <Field name=\"end_action\" initialValue={EndAction}>\r\n          {props => (\r\n            <div>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <TextField\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  name=\"end_action\"\r\n                  InputProps={{inputProps: { min: new Date().toLocaleDateString().split('/').reverse().join('-') } }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          )}\r\n        </Field>\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Horaire : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field:\r\n        <Field name=\"schedule\" initialValue={action.schedule}>\r\n          {props => (\r\n            <div>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <TextField\r\n                  id=\"date\"\r\n                  type=\"time\"\r\n                  name=\"schedule\"\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          )}\r\n        </Field>\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Ville : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"action_town\" initialValue={action.action_town}>\r\n          {props => (\r\n            <div>\r\n              <Select\r\n                id=\"action_town\"\r\n                name=\"action_town\"\r\n                label=\"Selectionner la ville\"\r\n                formControlProps={{ margin: 'none' }}\r\n                onClick={handleFilteredGeolocalisation}\r\n                type=\"select\"\r\n              >\r\n                {localisations.map((element, key) => {\r\n                  return (\r\n                    <option key={key} value={element.localisation_name}>\r\n                      {element.localisation_name}\r\n                    </option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Lieu : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"action_location\" initialValue={action.action_location}>\r\n          {props => (\r\n            <div>\r\n              <Select\r\n                name=\"action_location\"\r\n                label=\"Selectionner le lieu\"\r\n                formControlProps={{ margin: 'none' }}\r\n                type=\"select\"\r\n              >\r\n                {FilteredGeoLocalisation.map((element, key) => {\r\n                  return (\r\n                    <option key={key} value={element}>{element}</option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Autre lieu :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"other_location\" initialValue={action.other_location}>\r\n          {props => (\r\n            <div>\r\n              <TextField\r\n                label=\"Selectionner autre lieu\"\r\n                name=\"other_location\"\r\n                margin=\"none\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Produit : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"product\" initialValue={action.product ? action.product.split(\",\") : null}>\r\n          {props => (\r\n            <div>\r\n              <Select\r\n                name=\"product\"\r\n                type=\"select\"\r\n                multiple\r\n                native\r\n              >\r\n                {products.map((element, key) => {\r\n                  return (<option key={key} value={element}>{element}</option>)\r\n                })}\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Orateur :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"speaker\" initialValue={action.speaker}>\r\n          {props => (\r\n            <div>\r\n              <RadioGroup defaultValue={Speaker} className=\"radio-group\" onChange={(e) => {\r\n                setSpeaker(e.target.value);\r\n                toggleRadioButton();\r\n              }}>\r\n                <FormControlLabel value=\"1\" name=\"radio-1\" control={<Radio id=\"y\" />} label=\"Oui\" id=\"yes\" />\r\n                <FormControlLabel value=\"0\" name=\"radio-2\" control={<Radio id=\"n\" />} label=\"Non\" id=\"no\" />\r\n              </RadioGroup>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      display: true,\r\n      field: (\r\n        <Typography style={{ marginTop: \"18px\" }}>\r\n          Propositions d'orateur :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      display: true,\r\n      field: (\r\n        <Field name=\"speaker_suggestion\" initialValue={action.speaker_suggestion} >\r\n          {props => (\r\n            <div>\r\n              <TextField\r\n                name=\"speaker_suggestion\"\r\n                placeholder=\"Propositions\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      display: true,\r\n      field: (\r\n        <Typography style={{ marginTop: \"18px\" }}>\r\n          Transfert :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      display: true,\r\n      field: (\r\n        <Field name=\"speaker_transfer\" intialize={action.speaker_transfer}>\r\n          {props => (\r\n            <div>\r\n              <RadioGroup defaultValue={SpeakerTransfer} onChange={(e) => setSpeakerTransfer(e.target.value)} >\r\n                <FormControlLabel value=\"1\" name=\"radio-1\" control={<Radio />} label=\"Oui\" />\r\n                <FormControlLabel value=\"0\" name=\"radio-2\" control={<Radio />} label=\"Non\" />\r\n              </RadioGroup>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      display: true,\r\n      field: (\r\n        <Typography style={{ marginTop: \"18px\" }}>\r\n          Hébergement :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      display: true,\r\n      field: (\r\n        <Field name=\"speaker_accommodation\" initial={action.speaker_accommodation}>\r\n          {props => (\r\n            <div>\r\n              <RadioGroup defaultValue={SpeakerAccommodation} onChange={(e) => setSpeakerAccommodation(e.target.value)} >\r\n                <FormControlLabel value=\"1\" name=\"radio-1\" control={<Radio />} label=\"Oui\" />\r\n                <FormControlLabel value=\"0\" name=\"radio-2\" control={<Radio />} label=\"Non\" />\r\n              </RadioGroup>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      display: true,\r\n      field: (\r\n        <Typography style={{ marginTop: \"18px\" }}>\r\n          Agenda de la réunion :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      display: true,\r\n      field: (\r\n        <Field name=\"meeting_agenda\" initialValue={action.meeting_agenda}>\r\n          {props => (\r\n            <div>\r\n              <TextField\r\n                name=\"meeting_agenda\"\r\n                margin=\"none\"\r\n                type=\"file\"\r\n                onChange={onFileChange}\r\n                value={File.filename}\r\n              />\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Theme de la réunion : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"meeting_theme\" initialValue={action.meeting_theme}>\r\n          {props => (\r\n            <div>\r\n              <TextField\r\n                label=\"Choisissez le théme de la réunion\"\r\n                name=\"meeting_theme\"\r\n                margin=\"none\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Nombre des invités : <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"pax_number\" initialValue={action.pax_number}>\r\n          {props => (\r\n            <div>\r\n              <TextField\r\n                label=\"Tapez le nombre des invités\"\r\n                name=\"pax_number\"\r\n                margin=\"none\"\r\n                type=\"number\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Filtre de spécialité :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"action_field\" initialValue={action.action_field ? action.action_field.split(\",\") : null}>\r\n          {props => (\r\n            <div>\r\n              <Select\r\n                name=\"action_field\"\r\n                type=\"select\"\r\n                id=\"mySelect\"\r\n                formControlProps={{ margin: 'none' }}\r\n                multiple\r\n                native\r\n                onClick={handleFilteredDoctors}\r\n              >\r\n                {speciality.map((element, key) => {\r\n                  return (\r\n                    <option key={key} value={element}>\r\n                      {element}\r\n                    </option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Médecins invités {Count}: <span className=\"red-star\">*</span>\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (<div>\r\n        <Hint options={products} allowTabFill disableHint>\r\n          <input className='input-with-hint'\r\n            value={Text}\r\n            onChange={handleSearch}\r\n            placeholder=\"Search\"\r\n          />\r\n        </Hint>\r\n        <Field type=\"select\" name=\"invited_doctors\" initialValue={action.invited_doctors ? action.invited_doctors.split(\",\") : null}>\r\n          {props => (\r\n            <div>\r\n              <Select\r\n                name=\"invited_doctors\"\r\n                formControlProps={{ margin: 'none' }}\r\n                multiple\r\n                type=\"select\"\r\n                native\r\n                onClick={handleNumberDoctors}\r\n                id=\"invited_doctors\"\r\n              >\r\n                {FilteredDoctors.map((element, key) => {\r\n                  return (<option key={key} value={element.doctor_lname + ' ' + element.doctor_fname}>\r\n                    {element.doctor_lname} {element.doctor_fname} {element.doctor_field}\r\n                  </option>)\r\n                })}\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Field>\r\n      </div>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Autres médecins :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"other_doctors\" initialValue={action.other_doctors}>\r\n          {props => (\r\n            <div>\r\n              <TextField\r\n                type=\"text\"\r\n                label=\"Tapez autres médecins\"\r\n                name=\"other_doctors\"\r\n                margin=\"none\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Commentaires :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 9,\r\n      field: (\r\n        <Field name=\"comments\" initialValue={action.comments}>\r\n          {props => (\r\n            <div>\r\n              <TextField\r\n                type=\"text\"\r\n                label=\"Tapez des commentaires\"\r\n                name=\"comments\"\r\n                margin=\"none\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Field>\r\n      ),\r\n    },\r\n  ];\r\n  if (!isLoading) {\r\n    return (\r\n      <div className=\"container\" style={{ padding: 16, margin: 'auto', maxWidth: 1225, height: '100%' }}>\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Initiation d'action\" subtitle=\"Link-D / Actions\" />\r\n        </Row>\r\n        <Form\r\n          onSubmit={onSubmit}\r\n          validate={validate}\r\n          render={({ handleSubmit, form }) => (\r\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n              <Paper style={{ padding: 16 }}>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h5\" component=\"p\">\r\n                    Demande d'action\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                  {formFields.map((item, index) => (\r\n                    <Grid className={item.display ? \"extra-speaker-elements\" : null} item xs={item.size} key={index}>\r\n                      {item.field}\r\n                    </Grid>\r\n                  ))}\r\n                  <Grid item style={{ marginTop: 16 }}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                      onClick={handleBack}\r\n                    >\r\n                      Précedent\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item style={{ marginTop: 16 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Suivant\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </form>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <CircularProgress color=\"primary\" /> // Loading Spinner\r\n  )\r\n}\r\n\r\nexport default ActionsInitiation","import { FETCH_DOCTORS_REQUEST, FETCH_DOCTORS_SUCCESS, FETCH_DOCTORS_FAILURE, ADD_DOCTOR_REQUEST, ADD_DOCTOR_SUCCESS, ADD_DOCTOR_FAILURE, FETCH_LAST_DOCTOR_REQUEST, FETCH_LAST_DOCTOR_SUCCESS, FETCH_LAST_DOCTOR_FAILURE, FETCH_DOCTORS_BY_USER_ID_REQUEST, FETCH_DOCTORS_BY_USER_ID_SUCCESS, FETCH_DOCTORS_BY_USER_ID_FAILURE, FETCH_INVITED_DOCTORS_REQUEST, FETCH_INVITED_DOCTORS_SUCCESS, FETCH_INVITED_DOCTORS_FAILURE } from \"./types\";\r\nimport  DoctorsServices  from \"./services\";\r\n\r\n// Retrieve all doctors\r\nexport function getDoctors() {\r\n  return async (dispatch) => {\r\n    dispatch({type: FETCH_DOCTORS_REQUEST});\r\n    try {\r\n      const response = await DoctorsServices.fetchDoctors();\r\n      dispatch({type: FETCH_DOCTORS_SUCCESS, payload: response.data});\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_DOCTORS_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve last doctor\r\nexport function getLastDoctor() {\r\n  return async (dispatch) => {\r\n    dispatch({type: FETCH_LAST_DOCTOR_REQUEST});\r\n    try {\r\n      const response = await DoctorsServices.fetchLastDoctor();\r\n      dispatch({type: FETCH_LAST_DOCTOR_SUCCESS, payload: response.data});\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_LAST_DOCTOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve doctors by user id\r\nexport function getDoctorsByUserId(user_id) {\r\n  return async (dispatch) => {\r\n    dispatch({type: FETCH_DOCTORS_BY_USER_ID_REQUEST});\r\n    try {\r\n      const response = await DoctorsServices.fetchDoctorsByUserId(user_id);\r\n      dispatch({type: FETCH_DOCTORS_BY_USER_ID_SUCCESS, payload: response.data});\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_DOCTORS_BY_USER_ID_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve invited doctors\r\nexport function getInvitedDoctors(doctor_fname, doctor_lname) {\r\n  return async (dispatch) => {\r\n    dispatch({type: FETCH_INVITED_DOCTORS_REQUEST});\r\n    try {\r\n      const response = await DoctorsServices.fetchInvitedDoctors(doctor_fname, doctor_lname);\r\n      dispatch({type: FETCH_INVITED_DOCTORS_SUCCESS, payload: response.data});\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_INVITED_DOCTORS_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Add doctor\r\nexport function addDoctor(values) {\r\n  return async (dispatch) => {\r\n    dispatch({type: ADD_DOCTOR_REQUEST});\r\n    try {\r\n      const response = await DoctorsServices.addDoctor(values);\r\n      dispatch({type: ADD_DOCTOR_SUCCESS, payload: \"Doctor added successfully!\"});\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ADD_DOCTOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ADD_LOCALISATION_REQUEST, ADD_LOCALISATION_SUCCESS, ADD_LOCALISATION_FAILURE, FETCH_LOCALISATIONS_REQUEST, FETCH_LOCALISATIONS_SUCCESS, FETCH_LOCALISATIONS_FAILURE } from \"./types\";\r\nimport  LocalisationsServices  from \"./services\";\r\n\r\n// Retrieve all localisations\r\nexport function getLocalisations() {\r\n  return async (dispatch) => {\r\n    dispatch({type: FETCH_LOCALISATIONS_REQUEST});\r\n    try {\r\n      const response = await LocalisationsServices.fetchLocalisations();\r\n      dispatch({type: FETCH_LOCALISATIONS_SUCCESS, payload: response.data});\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_LOCALISATIONS_FAILURE,\r\n        payload: e.response.data\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Add new localisation\r\nexport function addLocalisation(values) {\r\n  return async (dispatch) => {\r\n    dispatch({type: ADD_LOCALISATION_REQUEST});\r\n    try {\r\n      dispatch({type: ADD_LOCALISATION_SUCCESS, payload: \"Localisation added successfully!\"});\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ADD_LOCALISATION_FAILURE,\r\n        payload: e.response.data\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Container, Row } from \"shards-react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { getActionByUserId, getVMActionsByUserId, getVMValidatedActionsByUserId, getSpeakerActions } from \"../actions/actions-initiation-actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableCell: {\r\n        textAlign: 'center',\r\n    }\r\n});\r\n\r\nconst ActionsMonitoring = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    // User state from redux store\r\n    const user = useSelector(\r\n        (state) => state.authReducer.user[0]\r\n    );\r\n    // Actions state from redux store\r\n    const actionsUser = useSelector(\r\n        (state) => state.actionsReducer.actionsUser\r\n    );\r\n    // Actions state from redux store\r\n    const VMActions = useSelector(\r\n        (state) => state.actionsReducer.VMActions\r\n    );\r\n    // Actions state from redux store\r\n    const VMValidatedActions = useSelector(\r\n        (state) => state.actionsReducer.VMValidatedActions\r\n    );\r\n    // Speaker Actions state from redux store\r\n    const speakerActions = useSelector(\r\n        (state) => state.actionsReducer.speakerActions\r\n    );\r\n    // Loading state from redux store\r\n    const isLoading = useSelector(\r\n        (state) => state.actionsReducer.loading\r\n    );\r\n    // Handle click function\r\n    const handleClick = (e) => {\r\n        return history.push(`display-action/${e.target.id}`); // Redirect user after submition of form\r\n    }\r\n    // Component on mount\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n        if (!isCancelled) {\r\n            if (user.user_position === \"DSM\") {\r\n                dispatch(getVMActionsByUserId(user.user_id));\r\n            } else if (user.user_position === \"CDP\") {\r\n                dispatch(getVMValidatedActionsByUserId(user.user_id));\r\n                dispatch(getSpeakerActions());\r\n            } else if (user.user_position === \"MED\") {\r\n                dispatch(getSpeakerActions());\r\n            }\r\n             else {\r\n                dispatch(getActionByUserId(user.user_id));\r\n            }\r\n        }\r\n        return () => (isCancelled = true);\r\n    }, [dispatch, user.user_id, user.user_position]);\r\n    if (!isLoading) {\r\n        return (\r\n            <div style={{ padding: 16, margin: 'auto', maxWidth: 1225, height: '100%' }}>\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle sm=\"4\" title=\"Suivi d'action\" subtitle=\"Link-D / Actions\" />\r\n                    </Row>\r\n                    <Row style={{ height: 500, width: '100%' }}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"p\">\r\n                                Tableau de suivi des demandes d'actions :\r\n                            </Typography>\r\n                        </Grid>\r\n                        {user.user_position === \"VM\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {actionsUser.reverse().map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {user.user_position === \"DSM\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {VMActions.reverse().map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {user.user_position === \"CDP\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {VMValidatedActions.reverse().map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {user.user_position === \"MED\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {speakerActions.reverse().map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <CircularProgress color=\"primary\" className=\"spinner\" /> // Loading Spinner\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionsMonitoring;\r\n","import React, { useEffect } from \"react\";\r\nimport { Container, Row } from \"shards-react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { getActionByUserId, getVMActionsByUserId, getVMValidatedActionsByUserId } from \"../actions/actions-initiation-actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableCell: {\r\n        textAlign: 'center',\r\n    }\r\n});\r\n\r\nconst ActionsValidation = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    // User state from redux store\r\n    const user = useSelector(\r\n        (state) => state.authReducer.user[0]\r\n    );\r\n    // Actions state from redux store\r\n    const actionsUser = useSelector(\r\n        (state) => state.actionsReducer.actionsUser\r\n    );\r\n    // Actions state from redux store\r\n    const VMActions = useSelector(\r\n        (state) => state.actionsReducer.VMActions\r\n    );\r\n    // Actions state from redux store\r\n    const VMValidatedActions = useSelector(\r\n        (state) => state.actionsReducer.VMValidatedActions\r\n    );\r\n    // Loading state from redux store\r\n    const isLoading = useSelector(\r\n        (state) => state.actionsReducer.loading\r\n    );\r\n    const handleClick = (e) => {\r\n        return history.push(`display-action/${e.target.id}`); // Redirect user after submition of form\r\n    }\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n        if (!isCancelled) {\r\n            if (user.user_position === \"DSM\") {\r\n                dispatch(getVMActionsByUserId(user.user_id));\r\n            } else if (user.user_position === \"CDP\") {\r\n                dispatch(getVMValidatedActionsByUserId(user.user_id));\r\n            } else {\r\n                dispatch(getActionByUserId(user.user_id));\r\n            }\r\n        }\r\n        return () => (isCancelled = true);\r\n    }, [dispatch, user.user_id, user.user_position]);\r\n    // Component on mount //\r\n    useEffect(() => {\r\n        dispatch(getActionByUserId(user.user_id));\r\n    }, [dispatch, user.user_id])\r\n    if (!isLoading) {\r\n        return (\r\n            <div style={{ padding: 16, margin: 'auto', maxWidth: 1225, height: '100%' }}>\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle sm=\"4\" title=\"Suivi d'action\" subtitle=\"Link-D / Actions\" />\r\n                    </Row>\r\n                    <Row style={{ height: 500, width: '100%' }}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"p\">\r\n                                Tableau de suivi des demandes d'actions :\r\n                            </Typography>\r\n                        </Grid>\r\n                        {user.user_position === \"VM\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {actionsUser.reverse().filter(action => action.status === \"En attente de validation VM\").map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n    \r\n                        {user.user_position === \"DSM\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {VMActions.reverse().filter(action => action.status === \"En attente de validation DSM\").map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {user.user_position === \"CDP\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {VMValidatedActions.reverse().filter(action => action.status === \"En attente de validation CDP\").map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <CircularProgress color=\"primary\" className=\"spinner\" /> // Loading Spinner\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionsValidation;\r\n","import axiosInstance from \"../../config/axios-instance\";\r\n\r\n// Fetch all agencies //\r\nfunction fetchAgencies() {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: \"/api/agencies\",\r\n    data: null,\r\n  });\r\n}\r\n\r\n\r\nconst AgenciesServices = {\r\n    fetchAgencies,\r\n};\r\n\r\nexport default AgenciesServices;","import axiosInstance from \"../../config/axios-instance\";\r\n\r\n// Fetch all services //\r\nfunction fetchServices() {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: \"/api/services\",\r\n    data: null,\r\n  });\r\n}\r\n\r\n\r\nconst ServicesServices = {\r\n  fetchServices,\r\n};\r\n\r\nexport default ServicesServices;","import React, { useEffect } from \"react\";\r\nimport {\r\n    Select,\r\n} from 'mui-rff';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAgencies } from \"../actions/agencies-actions/actions\";\r\nimport { getServices } from \"../actions/services-actions/actions\";\r\nimport { validateservices } from \"../actions/actions-initiation-actions/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AfterValidation = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    // Agencies state from redux store\r\n    const agencies = useSelector(\r\n        (state) => state.agenciesReducer.agencies\r\n    );\r\n    // Services state from redux store\r\n    const services = useSelector(\r\n        (state) => state.servicesReducer.services\r\n    );\r\n    // Action state from redux store\r\n    const action = useSelector(\r\n        (state) => state.actionsReducer.action\r\n    );\r\n    // Submit Form Group inputs\r\n    const onSubmit = async (values) => {\r\n        dispatch(validateservices(values, action));\r\n    };\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getAgencies());\r\n        dispatch(getServices());\r\n    }, [dispatch])\r\n    // All displayed fields form //\r\n    const formFields = [\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n                    Agences : <span className=\"red-star\">*</span>\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field type=\"select\" name=\"agency\">\r\n                    {props => (\r\n                        <div>\r\n                            <Select\r\n                                name=\"agency\"\r\n                                formControlProps={{ margin: 'none' }}\r\n                                multiple\r\n                                type=\"select\"\r\n                                native\r\n                            >\r\n                                {agencies.map((element, key) => {\r\n                                    return (<option key={key} value={[element.agency_email, element.agency_name]}>\r\n                                        {element.agency_name}\r\n                                    </option>)\r\n                                })}\r\n\r\n                            </Select>\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n                    Services : <span className=\"red-star\">*</span>\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field type=\"select\" name=\"service_name\">\r\n                    {props => (\r\n                        <div>\r\n                            <Select\r\n                                name=\"service_name\"\r\n                                formControlProps={{ margin: 'none' }}\r\n                                multiple\r\n                                type=\"select\"\r\n                                native\r\n                            >\r\n                                {services.map((element, key) => {\r\n                                    return (<option key={key} value={element.service_name}>\r\n                                        {element.service_name}\r\n                                    </option>)\r\n                                })}\r\n                            </Select>\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} >\r\n                    Commentaires :\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field name=\"comments\">\r\n                {props => (\r\n                  <div>\r\n                    <TextField\r\n                      placeholder=\"Tapez des commentaires\"\r\n                      margin=\"none\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            ),\r\n        },\r\n    ];\r\n    return (\r\n        <div style={{ padding: 16, margin: 'auto', maxWidth: 1225, height: '100%' }}>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, form }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Paper style={{ padding: 16 }}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h5\" component=\"p\">\r\n                                    Choix de service\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                                {formFields.map((item, index) => (\r\n                                    <Grid item xs={item.size} key={index}>\r\n                                        {item.field}\r\n                                    </Grid>\r\n                                ))}\r\n                                <Grid item style={{ marginTop: 16 }}>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"contained\"\r\n                                        onClick={handleBack}\r\n                                    >\r\n                                        Précedent\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item style={{ marginTop: 16 }}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Envoyer\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AfterValidation;\r\n","import { FETCH_AGENCIES_REQUEST, FETCH_AGENCIES_SUCCESS, FETCH_AGENCIES_FAILURE } from \"./types\";\r\nimport AgenciesServices from \"./services\";\r\n\r\n// Retrieve all agencies\r\nexport function getAgencies() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_AGENCIES_REQUEST });\r\n    try {\r\n      const response = await AgenciesServices.fetchAgencies();\r\n      dispatch({ type: FETCH_AGENCIES_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_AGENCIES_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}","import { FETCH_SERVICES_REQUEST, FETCH_SERVICES_SUCCESS, FETCH_SERVICES_FAILURE } from \"./types\";\r\nimport ServicesServices from \"./services\";\r\n\r\n// Retrieve all services\r\nexport function getServices() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_SERVICES_REQUEST });\r\n    try {\r\n      const response = await ServicesServices.fetchServices();\r\n      dispatch({ type: FETCH_SERVICES_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_SERVICES_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}","import React, { useEffect } from \"react\";\r\nimport { Container, Row } from \"shards-react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { getActionByUserId, getVMActionsByUserId, getVMValidatedActionsByUserId, getSpeakerActions } from \"../actions/actions-initiation-actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableCell: {\r\n        textAlign: 'center',\r\n    }\r\n});\r\n\r\nconst ActionsArchiving = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    // User state from redux store\r\n    const user = useSelector(\r\n        (state) => state.authReducer.user[0]\r\n    );\r\n    // Actions state from redux store\r\n    const actionsUser = useSelector(\r\n        (state) => state.actionsReducer.actionsUser\r\n    );\r\n    // Actions state from redux store\r\n    const VMActions = useSelector(\r\n        (state) => state.actionsReducer.VMActions\r\n    );\r\n    // Actions state from redux store\r\n    const VMValidatedActions = useSelector(\r\n        (state) => state.actionsReducer.VMValidatedActions\r\n    );\r\n    // Speaker Actions state from redux store\r\n    const speakerActions = useSelector(\r\n        (state) => state.actionsReducer.speakerActions\r\n    );\r\n    // Loading state from redux store\r\n    const isLoading = useSelector(\r\n        (state) => state.actionsReducer.loading\r\n    );\r\n    // Handle click function\r\n    const handleClick = (e) => {\r\n        return history.push(`display-action/${e.target.id}`); // Redirect user after submition of form\r\n    }\r\n    // Component on mount\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n        if (!isCancelled) {\r\n            if (user.user_position === \"DSM\") {\r\n                dispatch(getVMActionsByUserId(user.user_id));\r\n            } else if (user.user_position === \"CDP\") {\r\n                dispatch(getVMValidatedActionsByUserId(user.user_id));\r\n                dispatch(getSpeakerActions());\r\n            } else if (user.user_position === \"MED\") {\r\n                dispatch(getSpeakerActions());\r\n            }\r\n             else {\r\n                dispatch(getActionByUserId(user.user_id));\r\n            }\r\n        }\r\n        return () => (isCancelled = true);\r\n    }, [dispatch, user.user_id, user.user_position]);\r\n    if (!isLoading) {\r\n        const momentNow = new Date();\r\n        return (\r\n            <div style={{ padding: 16, margin: 'auto', maxWidth: 1225, height: '100%' }}>\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle sm=\"4\" title=\"Suivi d'action\" subtitle=\"Link-D / Actions\" />\r\n                    </Row>\r\n                    <Row style={{ height: 500, width: '100%' }}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"p\">\r\n                                Tableau de suivi des demandes d'actions :\r\n                            </Typography>\r\n                        </Grid>\r\n                        {user.user_position === \"VM\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {actionsUser.reverse().filter((element, key) => momentNow.getTime() - new Date(element.end_action).getTime() < 0 ).map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {user.user_position === \"DSM\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {VMActions.reverse().map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {user.user_position === \"CDP\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {VMValidatedActions.reverse().map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {user.user_position === \"MED\" && (\r\n                            <TableContainer component={Paper} style={{ height: '450px', overflow: \"scroll\" }}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Initiateur d'action</TableCell>\r\n                                            <TableCell>Type d'action</TableCell>\r\n                                            <TableCell>Thématique</TableCell>\r\n                                            <TableCell>Date</TableCell>\r\n                                            <TableCell>Lieu</TableCell>\r\n                                            <TableCell>Nb d'invités</TableCell>\r\n                                            <TableCell>Récapitulatif</TableCell>\r\n                                            <TableCell>Statut</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {speakerActions.reverse().map((row) => (\r\n                                            <TableRow key={row.action_id}>\r\n                                                <TableCell>{row.user_email.split(\"@\").shift()}</TableCell>\r\n                                                <TableCell>{row.action_type}</TableCell>\r\n                                                <TableCell>{row.meeting_theme}</TableCell>\r\n                                                <TableCell>{row.start_action.split(\"T\").shift().split(\"-\").reverse().join(\"/\")}</TableCell>\r\n                                                <TableCell>{row.action_location}</TableCell>\r\n                                                <TableCell className={classes.tableCell}>{row.pax_number}</TableCell>\r\n                                                <TableCell className={classes.tableCell}><button className=\"overview-action\" id={row.action_id} onClick={handleClick}>Voir</button></TableCell>\r\n                                                <TableCell className={\"status\" + (row.status === 'Validé' ? 'validated' : row.status === \"Refusé\" ? 'denied' : 'pending')}>{row.status}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <CircularProgress color=\"primary\" className=\"spinner\" /> // Loading Spinner\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionsArchiving;\r\n","import React from \"react\";\r\nimport PageTitle from \"../../../common/PageTitle\";\r\nimport { Row } from \"shards-react\";\r\nimport {\r\n    Paper,\r\n} from '@material-ui/core';\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/fr';\r\n\r\nconst ViewNotifications = () => {\r\n    // Notifications state from redux store\r\n    const notifications = useSelector(\r\n        (state) => state.notificationsReducer.notifications\r\n    );\r\n    return (\r\n        <div style={{ padding: 16, margin: 'auto', maxWidth: 1225 }}>\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Notifications\" subtitle=\"Link-D / Notifications\" />\r\n            </Row>\r\n            <Paper style={{ padding: 16 }}>\r\n                {/* {notifications.map((element, key) => {\r\n                    return (\r\n                        <li key={key}>{element.notification_name} <span className=\"time-left\">Il y a {(moment(new Date()).from(new Date(element.recieved_since))).split(\"dans\")}</span></li>\r\n                    )\r\n                })} */}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewNotifications;","import axiosInstance from \"../../config/axios-instance\";\r\n\r\n// Add new Notification //\r\nfunction addNotification(body) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: \"/api/notifications\",\r\n    data: body,\r\n  });\r\n}\r\n\r\n// Fetch all Notifications //\r\nfunction fetchNotifications() {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: \"/api/notifications\",\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch notification by recipient //\r\nfunction fetchNotificationsByVMsupervisor(VM_supervisor) {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: `/api/notifications/:${VM_supervisor}`,\r\n    params: {\r\n        VM_supervisor : VM_supervisor\r\n    },\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch notification by recipient //\r\nfunction fetchNotificationsByDSMsupervisor(DSM_supervisor) {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: `/api/notifications/VM_validated/:${DSM_supervisor}`,\r\n    params: {\r\n        DSM_supervisor : DSM_supervisor\r\n    },\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Fetch notification by recipient //\r\nfunction fetchNotificationsByCDPsupervisor(CDP_supervisor) {\r\n  return axiosInstance({\r\n    method: \"get\",\r\n    url: `/api/notifications/VM_validated/DSM_validated/:${CDP_supervisor}`,\r\n    params: {\r\n        CDP_supervisor : CDP_supervisor\r\n    },\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Mark as read notification by user id //\r\nfunction markAsReadNotificationsVMsupervisorRequest(notification_id) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/notifications/action/read/VM_supervisor/:${notification_id}`,\r\n    params: {\r\n        notification_id : notification_id\r\n    },\r\n    data: null,\r\n  });\r\n}\r\n\r\n// Mark as read notification by user id //\r\nfunction markAsReadNotificationsDSMsupervisorRequest(notification_id) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/notifications/action/read/DSM_supervisor/:${notification_id}`,\r\n    params: {\r\n        notification_id : notification_id\r\n    },\r\n    data: null,\r\n  });\r\n}\r\n// Mark as read notification by user id //\r\nfunction markAsReadNotificationsCDPsupervisorRequest(notification_id) {\r\n  return axiosInstance({\r\n    method: \"post\",\r\n    url: `/api/notifications/action/read/CDP_supervisor/:${notification_id}`,\r\n    params: {\r\n        notification_id : notification_id\r\n    },\r\n    data: null,\r\n  });\r\n}\r\n\r\n\r\nconst NotificationsServices = {\r\n  fetchNotifications,\r\n  addNotification,\r\n  fetchNotificationsByVMsupervisor,\r\n  fetchNotificationsByDSMsupervisor,\r\n  fetchNotificationsByCDPsupervisor,\r\n  markAsReadNotificationsVMsupervisorRequest,\r\n  markAsReadNotificationsDSMsupervisorRequest,\r\n  markAsReadNotificationsCDPsupervisorRequest\r\n};\r\n\r\nexport default NotificationsServices;","import { PUSH_NOTIFICATION_REQUEST, PUSH_NOTIFICATION_SUCCESS, PUSH_NOTIFICATION_FAILURE, FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST, FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS, FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE, FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST, FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS, FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE, FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST, FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS, FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE, MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST, MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS, MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE, MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST, MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS, MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE, MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST, MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS, MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE } from \"./types\";\r\nimport NotificationsServices from \"./services\";\r\n// import { Howl } from 'howler';\r\n// import newSound from './notification.mp3';\r\n\r\n// Retrieve Notification by recipient \r\nexport function getNotificationsByVMsupervisor(VM_supervisor) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST });\r\n    try {\r\n      const response = await NotificationsServices.fetchNotificationsByVMsupervisor(VM_supervisor);\r\n      dispatch({ type: FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve Notification by recipient \r\nexport function getNotificationsByDSMsupervisor(DSM_supervisor) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST });\r\n    try {\r\n      const response = await NotificationsServices.fetchNotificationsByDSMsupervisor(DSM_supervisor);\r\n      dispatch({ type: FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Retrieve Notification by recipient \r\nexport function getNotificationsByCDPsupervisor(CDP_supervisor) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST });\r\n    try {\r\n      const response = await NotificationsServices.fetchNotificationsByCDPsupervisor(CDP_supervisor);\r\n      dispatch({ type: FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: FETCH_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Push notifications\r\nexport function pushNotification(values) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: PUSH_NOTIFICATION_REQUEST });\r\n    try {\r\n      const response = await NotificationsServices.addNotification(values);\r\n      dispatch({ type: PUSH_NOTIFICATION_SUCCESS });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: PUSH_NOTIFICATION_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Mark as read notifications\r\nexport function markAsReadNotificationsByVMsupervisor(notification_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_REQUEST });\r\n    try {\r\n      const response = await NotificationsServices.markAsReadNotificationsVMsupervisorRequest(notification_id);\r\n      dispatch({ type: MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_SUCCESS });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: MARK_AS_READ_NOTIFICATIONS_BY_VM_SUPERVISOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Mark as read notifications\r\nexport function markAsReadNotificationsByDSMsupervisor(notification_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_REQUEST });\r\n    try {\r\n      const response = await NotificationsServices.markAsReadNotificationsDSMsupervisorRequest(notification_id);\r\n      dispatch({ type: MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_SUCCESS });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: MARK_AS_READ_NOTIFICATIONS_BY_DSM_SUPERVISOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// Mark as read notifications\r\nexport function markAsReadNotificationsByCDPsupervisor(notification_id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_REQUEST });\r\n    try {\r\n      const response = await NotificationsServices.markAsReadNotificationsCDPsupervisorRequest(notification_id);\r\n      dispatch({ type: MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_SUCCESS });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: MARK_AS_READ_NOTIFICATIONS_BY_CDP_SUPERVISOR_FAILURE,\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n// const SoundPlay = () => {\r\n//   const Sounds = new Howl({\r\n//     src: [newSound],\r\n//     loop: false,\r\n//     preload: true,\r\n//   })\r\n//   Sounds.play()\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"shards-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { connect } from \"react-redux\";\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport axiosInstance from \"../../config/axios-instance\";\r\nimport { getInvitedDoctors } from \"../../actions/doctors-actions/actions\";\r\nclass InvitedDoctorsSpeciality extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: {},\r\n      doctor_name: [],\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let jobDoctor = 0;\r\n    let generalist = 0;\r\n    let generalDoctor = 0;\r\n    let neuphrologie = 0;\r\n    let kidsDoctor = 0;\r\n    let chirugien = 0;\r\n    let jobDoctorPercentage = 0;\r\n    let generalistPercentage = 0;\r\n    let generalDoctorPercentage = 0;\r\n    let neuphrologiePercentage = 0;\r\n    let kidsDoctorPercentage = 0;\r\n    let chirugienPercentage = 0;\r\n    if (this.props.invited_doctors) {\r\n      var doctor_name = [],\r\n        arr = this.props.invited_doctors.split(\",\")\r\n      for (var i = 0; i < arr.length; i++) {\r\n        doctor_name.push({\r\n          doctor_lname: arr[i].split(\" \")[0],\r\n          doctor_fname: arr[i].split(\" \")[1]\r\n        })\r\n      }\r\n      if (this.props.invited_doctors !== prevProps.invited_doctors) {\r\n        axiosInstance.get('http://localhost:3000/api/doctors/invited', {\r\n          params: {\r\n            doctor_name: doctor_name,\r\n          }\r\n        }).then(response => {\r\n          let total = response.data\r\n          for (let i = 0; i < total.length; i++) {\r\n            if (total[i].doctor_field === \"Médecin de travail\") {\r\n              jobDoctor++;\r\n              jobDoctorPercentage = Math.round((jobDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Generaliste\") {\r\n              generalist++;\r\n              generalistPercentage = Math.round((generalist / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Médecin Général\") {\r\n              generalDoctor++;\r\n              generalDoctorPercentage = Math.round((generalDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Neuphrologie\") {\r\n              neuphrologie++;\r\n              neuphrologiePercentage = Math.round((neuphrologie / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Médecin enfant\") {\r\n              kidsDoctor++;\r\n              kidsDoctorPercentage = Math.round((kidsDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Chirugien\") {\r\n              chirugien++;\r\n              chirugienPercentage = Math.round((chirugien / total.length) * 100);\r\n            }\r\n          }\r\n          this.setState({\r\n            chartData:\r\n            {\r\n              labels: [\"Docteur de travail\", \"Généraliste\", \"Docteur général\", \"Neuphrologiste\", \"Docteur d'enfant\", \"Chirugien\"],\r\n              datasets: [\r\n                {\r\n                  data: [jobDoctorPercentage, generalistPercentage, generalDoctorPercentage, neuphrologiePercentage, kidsDoctorPercentage, chirugienPercentage],\r\n                  backgroundColor: [\r\n                    \"rgb(229,104,56)\",\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(175,72,152)\",\r\n                    \"rgb(89,180,189)\",\r\n                    \"rgb(171,219,227)\",\r\n                  ],\r\n                  borderWidth: 2,\r\n                  borderColor: [\r\n                    \"rgb(229,104,56)\",\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(175,72,152)\",\r\n                    \"rgb(89,180,189)\",\r\n                    \"rgb(171,219,227)\",\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { title, isLoading } = this.props;\r\n    if (isLoading) {\r\n      return (\r\n        <CircularProgress color=\"primary\" className=\"spinner\" /> // Loading Spinner\r\n      )\r\n    } else {\r\n      return (\r\n        <Card small className=\"h-100\">\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">{title}</h6>\r\n          </CardHeader>\r\n          <CardBody className=\"d-flex py-0\">\r\n            <Doughnut\r\n              data={this.state.chartData}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n              }}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nInvitedDoctorsSpeciality.propTypes = {\r\n  /**\r\n   * The component's title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The chart config object.\r\n   */\r\n};\r\n\r\nInvitedDoctorsSpeciality.defaultProps = {\r\n  title: \"Statistiques spécialités médecins\", // Card Title\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    doctors: state.doctorsReducer.doctors,\r\n    user: state.authReducer.user,\r\n    isLoading: state.doctorsReducer.isLoading,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getInvitedDoctors: (doctor_fname, doctor_lname) => dispatch(getInvitedDoctors(doctor_fname, doctor_lname))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InvitedDoctorsSpeciality);\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"shards-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport axiosInstance from \"../../config/axios-instance\";\r\nclass InvitedDoctorsFeedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: {},\r\n      doctor_name: [],\r\n    }\r\n  }\r\n// Component on update\r\n  componentDidUpdate(prevProps) {\r\n    let A = 0;\r\n    let B = 0;\r\n    let C = 0;\r\n    let APercentage = 0;\r\n    let BPercentage = 0;\r\n    let CPercentage = 0;\r\n    if (this.props.invited_doctors) {\r\n      var doctor_name = [],\r\n        arr = this.props.invited_doctors.split(\",\")\r\n      for (var i = 0; i < arr.length; i++) {\r\n        doctor_name.push({\r\n          doctor_lname: arr[i].split(\" \")[0],\r\n          doctor_fname: arr[i].split(\" \")[1]\r\n        })\r\n      }\r\n      if (this.props.invited_doctors !== prevProps.invited_doctors) {\r\n        axiosInstance.get('http://localhost:3000/api/doctors/invited', {\r\n          params: {\r\n            doctor_name: doctor_name,\r\n          }\r\n        }).then(response => {\r\n          let total = response.data\r\n          for (let i = 0; i < total.length; i++) {\r\n            if (total[i].doctor_potential === \"A\") {\r\n              A++;\r\n              APercentage = Math.round((A / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"B\") {\r\n              B++;\r\n              BPercentage = Math.round((B / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"C\") {\r\n              C++;\r\n              CPercentage = Math.round((C / total.length) * 100);\r\n            }     \r\n          }\r\n          this.setState({\r\n            chartData:\r\n            {\r\n              labels: [\"A\", \"B\", \"C\"],\r\n              datasets: [\r\n                {\r\n                  data: [APercentage, BPercentage, CPercentage],\r\n                  backgroundColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ],\r\n                  borderWidth: 2,\r\n                  borderColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { title, isLoading } = this.props;\r\n    if (isLoading) {\r\n      return (\r\n        <CircularProgress color=\"primary\" className=\"spinner\" /> // Loading Spinner\r\n      )\r\n    } else {\r\n      return (\r\n        <Card small className=\"h-100\">\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">{title}</h6>\r\n          </CardHeader>\r\n          <CardBody className=\"d-flex py-0\">\r\n            <Doughnut\r\n              data={this.state.chartData}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n              }}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nInvitedDoctorsFeedback.propTypes = {\r\n  /**\r\n   * The component's title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The chart config object.\r\n   */\r\n};\r\n\r\nInvitedDoctorsFeedback.defaultProps = {\r\n  title: \"Statistiques feedback médecins\", // Card Title\r\n};\r\n\r\nexport default InvitedDoctorsFeedback;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { Row, Col } from \"shards-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getActionById, denyDSMActionById, denyCDPActionById, validateDSMActionById, modifyActionById, validateVMActionById, validateDSMSpeakerActionById, validateCDPActionById, validateCDPFirstActionById, removeActionById, returnActionById, validateMEDActionById, validateMEDFirstActionById, messagingValidation, messagingRejection } from \"../actions/actions-initiation-actions/actions\";\r\nimport { pushNotification } from \"../actions/notifications-actions/actions\";\r\nimport InvitedDoctorsSpeciality from \"../components/recap-statistics/DoctorsSpeciality\";\r\nimport InvitedDoctorsFeedback from \"../components/recap-statistics/DoctorsFeedback\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Avatar,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n\r\nconst DisplayAction = () => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [open, setOpen] = React.useState(false);\r\n  const [NoteContent, setNoteContent] = React.useState(\"\");\r\n  const [LastAction, setLastAction] = useState({});\r\n  const [Speaker, setSpeaker] = useState(\"\");\r\n  const [SpeakerTransfer, setSpeakerTransfer] = useState(\"\");\r\n  const [SpeakerAccommodation, setSpeakerAccommodation] = useState(\"\");\r\n  const [StartAction, setStartAction] = useState(\"\");\r\n  const [EndAction, setEndAction] = useState(\"\");\r\n  const history = useHistory();\r\n  var pathId = history.location.pathname.split(\"/\")[history.location.pathname.split(\"/\").length - 1];\r\n\r\n  // User state from redux store\r\n  const user = useSelector(\r\n    (state) => state.authReducer.user[0]\r\n  );\r\n  // Action state from redux store\r\n  const action = useSelector(\r\n    (state) => state.actionsReducer.action\r\n  );\r\n\r\n  // All displayed fields form //\r\n  const formFields = [\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Demandeur :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {action.user_email && (action.user_email).split(\"@\").shift()}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Produit :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.product}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Contact :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {action.user_email}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Orateur :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {Speaker}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Supérieur hiérarchique :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {user.user_position === \"VM\" ? user.DSM_supervisor : user.user_position === \"DSM\" ? user.CDP_supervisor : null}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Proposition d'orateur :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.speaker_suggestion}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Type d’action :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.action_type}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Transfert :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {SpeakerTransfer}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Hébergement :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {SpeakerAccommodation}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Autre staff sanofi :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {action.other_stuff}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Agenda de la réunion :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          <Avatar alt=\"uploaded-file\" className=\"file\" src={LastAction.meeting_agenda} />\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Date début de l’action :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {StartAction}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Théme de la réunion :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.meeting_theme}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Date fin de l’action :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {EndAction}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Nombre de Pax :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.pax_number}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Horaire :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.schedule}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Liste Médecins invités :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.invited_doctors}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Ville :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.action_town}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Autres médecins :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.other_doctors}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Lieu :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.action_location}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Commentaires :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.comments}\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          Autre lieu :\r\n        </Typography>\r\n      ),\r\n    },\r\n    {\r\n      size: 3,\r\n      field: (\r\n        <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n          {LastAction.other_location}\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleDialogOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialoClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleModifyActionById = () => {\r\n    history.push(\"/initiation-action\")\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    let values = {};\r\n    let returnedDSMText = `Action avec id ${pathId} de la part du client ${action.user_email} a été en retour avec modification de la part du DSM ${user.user_email} pour la raison ${NoteContent}`\r\n    let returnedCDPText = `Action avec id ${pathId} de la part du client ${action.user_email} a été en retour avec modification de la part du CDP ${user.user_email} pour la raison ${NoteContent}`\r\n    let returnedMEDText = `Action avec id ${pathId} de la part du client ${action.user_email} a été en retour avec modification de la part du MED ${user.user_email} pour la raison ${NoteContent}`\r\n    values.notification_sender = user.user_id;\r\n    values.DSM_supervisor = user.DSM_supervisor;\r\n    values.CDP_supervisor = user.CDP_supervisor;\r\n    values.recieved_since = new Date();\r\n    if (user.user_position === \"VM\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.notification_name = returnedDSMText;\r\n      dispatch(pushNotification(values));\r\n      dispatch(modifyActionById(action.action_id));\r\n    }\r\n    if (user.user_position === \"DSM\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.notification_name = returnedDSMText;\r\n      dispatch(pushNotification(values));\r\n      dispatch(returnActionById(action.action_id));\r\n    }\r\n    if (user.user_position === \"CDP\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.notification_name = returnedCDPText;\r\n      dispatch(pushNotification(values));\r\n      dispatch(returnActionById(action.action_id));\r\n    }\r\n    if (user.user_position === \"MED\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.notification_name = returnedMEDText;\r\n      dispatch(pushNotification(values));\r\n      dispatch(returnActionById(action.action_id));\r\n    }\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    let values = {};\r\n    let validationVMText = `Action avec id ${pathId} de la part du client ${action.user_email} a été envoyée et en attente de validation DSM!`\r\n    let validationDSMText = `Action avec id ${pathId} de la part du client ${action.user_email} a été validée avec succés de la part du DSM ${user.user_email} et en attente de validation CDP`\r\n    let validationCDPText = `Action avec id ${pathId} de la part du client ${action.user_email} a été validée avec succés de la part du chef de projet ${user.user_email}!`\r\n    values.notification_sender = user.user_id;\r\n    values.recieved_since = new Date();\r\n    if (user.user_position === \"VM\") {\r\n      if (action.status === \"En attente de validation VM\") {\r\n        values.DSM_supervisor = user.DSM_supervisor;\r\n        values.CDP_supervisor = user.CDP_supervisor;\r\n        values.VM_supervisor = user.user_id;\r\n        values.notification_name = validationVMText;\r\n        dispatch(validateVMActionById(pathId, user.user_email, user.user_id, action.user_email, user.DSM_supervisor, user.CDP_supervisor));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingValidation(user.user_phone_number));\r\n      } else {\r\n        history.push(\"/after-validation\")\r\n      }\r\n    } else if (user.user_position === \"DSM\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.DSM_supervisor = user.user_id;\r\n      values.CDP_supervisor = user.CDP_supervisor;\r\n      values.notification_name = validationDSMText;\r\n      if (action.speaker === 0) {\r\n        dispatch(validateDSMActionById(pathId, user.user_email, user.CDP_supervisor, action.user_email));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingValidation(user.user_phone_number));\r\n      } else {\r\n        dispatch(validateDSMSpeakerActionById(pathId, user.user_email, user.CDP_supervisor, action.user_email));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingValidation(user.user_phone_number));\r\n      }\r\n    } else if (user.user_position === \"CDP\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.DSM_supervisor = user.DSM_supervisor;\r\n      values.CDP_supervisor = user.user_id;\r\n      values.notification_name = validationCDPText;\r\n      if (action.status === 'En attente de validation CDP et MED') {\r\n        dispatch(validateCDPFirstActionById(pathId, user.user_email, user.user_id, action.user_email));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingValidation(user.user_phone_number));\r\n      } else {\r\n        dispatch(validateCDPActionById(pathId, user.user_email, user.user_id, action.user_email));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingValidation(user.user_phone_number));\r\n      }\r\n    } else if (user.user_position === \"MED\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.DSM_supervisor = user.DSM_supervisor;\r\n      values.CDP_supervisor = user.user_id;\r\n      values.notification_name = validationCDPText;\r\n      if (action.status === 'En attente de validation CDP et MED') {\r\n        dispatch(validateMEDFirstActionById(pathId, user.user_email, user.user_id, action.user_email));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingValidation(user.user_phone_number));\r\n      } else {\r\n        dispatch(validateMEDActionById(pathId, user.user_email, user.user_id, action.user_email));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingValidation(user.user_phone_number));\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    let values = {};\r\n    let rejectionVMText = `Action avec id ${pathId} du client ${action.user_email} a été supprimée avec succés!`\r\n    let rejectionDSMText = `Action avec id ${pathId} du client ${action.user_email} a été rejetée de la part du DSM ${user.user_email}`\r\n    let rejectionCDPText = `Action avec id ${pathId} du client ${action.user_email} a été rejetée de la part du chef de projet ${user.user_email}!`\r\n    values.notification_sender = user.user_id;\r\n    values.DSM_supervisor = user.DSM_supervisor;\r\n    values.CDP_supervisor = user.CDP_supervisor;\r\n    values.recieved_since = new Date();\r\n    if (user.user_position === \"VM\") {\r\n      if (action.status === \"En attente de validation VM\") {\r\n        values.VM_supervisor = user.user_id;\r\n        values.notification_name = rejectionVMText;\r\n        dispatch(removeActionById(pathId));\r\n        dispatch(pushNotification(values));\r\n        dispatch(messagingRejection(user.user_phone_number));\r\n      } else {\r\n        history.goBack()\r\n      }\r\n    } else if (user.user_position === \"DSM\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.notification_name = rejectionDSMText;\r\n      dispatch(denyDSMActionById(pathId, user.user_id));\r\n      dispatch(pushNotification(values));\r\n      dispatch(messagingRejection(user.user_phone_number));\r\n    } else if (user.user_position === \"CDP\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.notification_name = rejectionCDPText;\r\n      dispatch(denyCDPActionById(pathId, user.user_id));\r\n      dispatch(pushNotification(values));\r\n      dispatch(messagingRejection(user.user_phone_number));\r\n    } else if (user.user_position === \"MED\") {\r\n      values.VM_supervisor = action.VM_validation;\r\n      values.notification_name = rejectionCDPText;\r\n      dispatch(denyCDPActionById(pathId, user.user_id));\r\n      dispatch(pushNotification(values));\r\n      dispatch(messagingRejection(user.user_phone_number));\r\n    }\r\n  }\r\n\r\n  // Component on mount //\r\n  useEffect(() => {\r\n    dispatch(getActionById(pathId)); // Dispatch get action of all action \r\n  }, [dispatch, pathId])\r\n  useEffect(() => {\r\n    let startDate = new Date(LastAction.start_action); // Create an instance of start date\r\n    let endDate = new Date(LastAction.end_action); // Create an instance of end date\r\n    if (action) {\r\n      setLastAction(action); // Hook last action to local state\r\n      if (action.start_action) {\r\n        setStartAction(startDate.toLocaleDateString(\"fr\")); // Format date type to French local date string\r\n      }\r\n      if (action.end_action) {\r\n        setEndAction(endDate.toLocaleDateString(\"fr\")); // Format date type to French local date string\r\n      }\r\n      if (action.speaker) {\r\n        setSpeaker(\"Oui\"); // Set logic number `(0/1)` to readable string\r\n      } else {\r\n        setSpeaker(\"Non\"); // Set logic number `(0/1)` to readable string\r\n      }\r\n      if (action.speaker_transfer) {\r\n        setSpeakerTransfer(\"Oui\"); // Set logic number `(0/1)` to readable string\r\n      } else {\r\n        setSpeakerTransfer(\"Non\"); // Set logic number `(0/1)` to readable string\r\n      }\r\n      if (action.speaker_accommodation) {\r\n        setSpeakerAccommodation(\"Oui\"); // Set logic number `(0/1)` to readable string\r\n      } else {\r\n        setSpeakerAccommodation(\"Non\"); // Set logic number `(0/1)` to readable string\r\n      }\r\n    }\r\n  }, [LastAction.start_action, LastAction.end_action, action])\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1225, height: '100%' }}>\r\n      <Row noGutters className=\"page-header py-4\">\r\n        <PageTitle sm=\"4\" title=\"Initiation d'action\" subtitle=\"Link-D / Actions\" />\r\n      </Row>\r\n      <Paper style={{ padding: 16 }}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\" component=\"p\">\r\n            Récapitulatif de votre demande d'action\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container alignItems=\"flex-start\" style={{ marginTop: 16 }}>\r\n          <Grid item xs={6} style={{ marginBottom: 16 }}>\r\n            <Typography component=\"p\" className=\"bold-title\">\r\n              Logistique :\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography component=\"p\" className=\"bold-title\">\r\n              Thématique :\r\n            </Typography>\r\n          </Grid>\r\n          {formFields.map((item, index) => (\r\n            <Grid item xs={item.size} key={index}>\r\n              {item.field}\r\n            </Grid>\r\n          ))}\r\n          <Row style={{ margin: '0 auto' }}>\r\n            <Col lg=\"6\" md=\"9\" sm=\"12\" style={{ marginTop: \"32px\" }}><InvitedDoctorsFeedback invited_doctors={LastAction.invited_doctors} /></Col>\r\n            <Col lg=\"6\" md=\"9\" sm=\"12\" style={{ marginTop: \"32px\" }}><InvitedDoctorsSpeciality invited_doctors={LastAction.invited_doctors} /></Col>\r\n          </Row>\r\n          <Grid container alignItems=\"flex-start\" style={{ marginTop: 32, textAlign: \"center\", justifyContent: \"center\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleValidate}\r\n              style={{ marginRight: '25px', display: ((user.user_position === \"VM\" && action.status === \"En attente de validation VM\") || (user.user_position === \"VM\" && action.status === \"Validé\") || (user.user_position === \"DSM\" && action.status === \"En attente de validation DSM\") || (user.user_position === \"CDP\" && action.status === \"En attente de validation CDP\") || (user.user_position === \"CDP\" && action.status === \"En attente de validation CDP et MED\") || (user.user_position === \"MED\" && action.status === \"En attente de validation CDP et MED\") || (user.user_position === \"MED\" && action.status === \"En attente de validation MED\") ? 'block' : 'none') }}\r\n            >\r\n              {user.user_position === \"VM\" ? \"Envoyer\" : \"Valider\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={user.user_position === \"VM\" ? handleModifyActionById : handleDialogOpen}\r\n              style={{ marginRight: '25px', display: ((user.user_position === \"VM\" && action.status === \"En attente de validation VM\") || (user.user_position === \"DSM\" && action.status === \"En attente de validation DSM\") || (user.user_position === \"CDP\" && action.status === \"En attente de validation CDP\") || (user.user_position === \"CDP\" && action.status === \"En attente de validation CDP et MED\") || (user.user_position === \"MED\" && action.status === \"En attente de validation CDP et MED\") || (user.user_position === \"MED\" && action.status === \"En attente de validation MED\") ? 'block' : 'none') }}\r\n            >\r\n              Modifier\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleDelete}\r\n              style={{ marginRight: '25px', display: ((user.user_position === \"VM\" && action.status === \"En attente de validation VM\") || (user.user_position === \"VM\" && action.status === \"Validé\") || (user.user_position === \"DSM\" && action.status === \"En attente de validation DSM\") || (user.user_position === \"CDP\" && action.status === \"En attente de validation CDP\") || (user.user_position === \"CDP\" && action.status === \"En attente de validation CDP et MED\") || (user.user_position === \"MED\" && action.status === \"En attente de validation CDP et MED\") || (user.user_position === \"MED\" && action.status === \"En attente de validation MED\") ? 'block' : 'none') }}\r\n            >\r\n              {user.user_position === \"VM\" && action.status === \"En attente de validation VM\" ? \"Supprimer\" : user.user_position === \"VM\" && action.status === \"Validé\" ? \"Retour\" : \"Refuser\"}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n          fullScreen={fullScreen}\r\n          open={open}\r\n          onClose={handleDialoClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">{\"Raison de modification d'action\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Tapez la raison ici\"\r\n                multiline\r\n                rowsMax={4}\r\n                onChange={(e) => setNoteContent(e.target.value)}\r\n              />\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={handleDialoClose} color=\"primary\">\r\n              Annuler\r\n            </Button>\r\n            <Button onClick={handleEdit} color=\"primary\" autoFocus>\r\n              Enregistrer\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayAction;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {\r\n    TextField,\r\n} from 'mui-rff';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\nimport PageTitle from \"../../../common/PageTitle\";\r\nimport { Row } from \"shards-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserProfile } from \"../../../../actions/auth-actions/actions\";\r\n\r\nconst EditUserProfile = () => {\r\n    const [File, setFile] = useState([]);\r\n    const dispatch = useDispatch();\r\n    // User state from redux store\r\n    const user = useSelector(\r\n        (state) => state.authReducer.user[0]\r\n    );\r\n    // Loading state from redux store\r\n    const isLoading = useSelector(\r\n        (state) => state.doctorsReducer.isLoading\r\n    );\r\n\r\n    const onFileChange = function (e) {\r\n        setFile(e.target.files[0]); // Hook file to local state\r\n    }\r\n      // Validator for required fields //\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (values.user_password !== values.user_password_confirmation) {\r\n      errors.user_password = 'Vous devez saisir le méme mot de passe';\r\n      errors.user_password_confirmation = 'Vous devez saisir le méme mot de passe';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n    // Submit Form Group\r\n    const onSubmit = async (values) => {\r\n        const formData = new FormData(); // Create an instance of FormData\r\n        formData.append(\"file\", File, File.name); // Append file to formData\r\n        formData.append(\"values\", JSON.stringify(values)); // Append all data except file upload to formData\r\n        dispatch(updateUserProfile(user.user_id, formData))\r\n    };\r\n\r\n    // All displayed fields form //\r\n    const formFields = [\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n                    Mettre à jour votre photo de profil : <span className=\"red-star\">*</span>\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            display: true,\r\n            field: (\r\n                <Field name=\"user_avatar\">\r\n                    {props => (\r\n                        <div>\r\n                            <TextField\r\n                                name=\"user_avatar\"\r\n                                margin=\"none\"\r\n                                type=\"file\"\r\n                                onChange={onFileChange}\r\n                                value={File.filename}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n                    Mot de passe :\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field name=\"user_password\">\r\n                    {props => (\r\n                        <div>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"Tapez votre nouveau mot de passe\"\r\n                                name=\"user_password\"\r\n                                margin=\"none\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n        {\r\n            size: 3,\r\n            field: (\r\n                <Typography className={\"typography\"} style={{ marginTop: \"18px\" }}>\r\n                    Mot de passe vérification :\r\n                </Typography>\r\n            ),\r\n        },\r\n        {\r\n            size: 9,\r\n            field: (\r\n                <Field name=\"user_password_confirmation\">\r\n                    {props => (\r\n                        <div>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"Tapez à nouveau votre nouveau mot de passe\"\r\n                                name=\"user_password_confirmation\"\r\n                                margin=\"none\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n            ),\r\n        },\r\n    ];\r\n    if (!isLoading) {\r\n        return (\r\n            <div style={{ padding: 16, margin: 'auto', maxWidth: 1225 }}>\r\n                {/* Page Header */}\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\" title=\"Initiation d'action\" subtitle=\"Link-D / Actions\" />\r\n                </Row>\r\n                <Form\r\n                    onSubmit={onSubmit}\r\n                    validate={validate}\r\n                    render={({ handleSubmit, form }) => (\r\n                        <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                            <Paper style={{ padding: 16 }}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h5\" component=\"p\">\r\n                                        Modifier le profil\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                                    {formFields.map((item, index) => (\r\n                                        <Grid item xs={item.size} key={index}>\r\n                                            {item.field}\r\n                                        </Grid>\r\n                                    ))}\r\n                                    <Grid item style={{ marginTop: 16 }}>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            onClick={form.reset}\r\n                                        >\r\n                                            Reinitialiser\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item style={{ marginTop: 16 }}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Enregistrer\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </form>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <CircularProgress color=\"primary\" /> // Loading Spinner\r\n    )\r\n}\r\n\r\nexport default EditUserProfile;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"shards-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { connect } from \"react-redux\";\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport axiosInstance from \"../../config/axios-instance\";\r\n\r\nclass DoctorsSpeciality extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      doctors: [],\r\n      chartData: {},\r\n    }\r\n  }\r\n// Component on mount\r\n  componentDidMount() {\r\n    let jobDoctor = 0;\r\n    let generalist = 0;\r\n    let generalDoctor = 0;\r\n    let neuphrologie = 0;\r\n    let kidsDoctor = 0;\r\n    let chirugien = 0;\r\n    let jobDoctorPercentage = 0;\r\n    let generalistPercentage = 0;\r\n    let generalDoctorPercentage = 0;\r\n    let neuphrologiePercentage = 0;\r\n    let kidsDoctorPercentage = 0;\r\n    let chirugienPercentage = 0;\r\n    if (this.props.user.length) {\r\n      if (this.props.user[0].user_position === \"VM\") {\r\n        axiosInstance.get(`http://localhost:3000/api/doctors/VMsupervisors/${this.props.user[0].user_id}`, {\r\n          params: {\r\n            user_id: this.props.user[0].user_id\r\n          }\r\n        }).then((response) => {\r\n          let total = response.data\r\n          for (let i = 0; i < total.length; i++) {\r\n            if (total[i].doctor_field === \"Médecin de travail\") {\r\n              jobDoctor++;\r\n              jobDoctorPercentage = Math.round((jobDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Generaliste\") {\r\n              generalist++;\r\n              generalistPercentage = Math.round((generalist / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Médecin Général\") {\r\n              generalDoctor++;\r\n              generalDoctorPercentage = Math.round((generalDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Neuphrologie\") {\r\n              neuphrologie++;\r\n              neuphrologiePercentage = Math.round((neuphrologie / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Médecin enfant\") {\r\n              kidsDoctor++;\r\n              kidsDoctorPercentage = Math.round((kidsDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Chirugien\") {\r\n              chirugien++;\r\n              chirugienPercentage = Math.round((chirugien / total.length) * 100);\r\n            }\r\n          }\r\n          this.setState({\r\n            chartData:\r\n            {\r\n              labels: [\"Docteur de travail\", \"Généraliste\", \"Docteur général\", \"Neuphrologiste\", \"Docteur d'enfant\", \"Chirugien\"],\r\n              datasets: [\r\n                {\r\n                  data: [jobDoctorPercentage, generalistPercentage, generalDoctorPercentage, neuphrologiePercentage, kidsDoctorPercentage, chirugienPercentage],\r\n                  backgroundColor: [\r\n                    \"rgb(229,104,56)\",\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(175,72,152)\",\r\n                    \"rgb(89,180,189)\",\r\n                    \"rgb(171,219,227)\",\r\n                  ],\r\n                  borderWidth: 2,\r\n                  borderColor: [\r\n                    \"rgb(229,104,56)\",\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(175,72,152)\",\r\n                    \"rgb(89,180,189)\",\r\n                    \"rgb(171,219,227)\",\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n        })\r\n      } else if(this.props.user[0].user_position === \"DSM\") {\r\n          axiosInstance.get(`http://localhost:3000/api/doctors/VMsupervisors/${this.props.user[0].VM_supervisor}`, {\r\n            params: {\r\n              user_id: this.props.user[0].VM_supervisor\r\n            }\r\n          }).then((response) => {\r\n            console.log(response)\r\n            let total = response.data\r\n            for (let i = 0; i < total.length; i++) {\r\n              if (total[i].doctor_field === \"Médecin de travail\") {\r\n                jobDoctor++;\r\n                jobDoctorPercentage = Math.round((jobDoctor / total.length) * 100);\r\n              }\r\n              if (total[i].doctor_field === \"Generaliste\") {\r\n                generalist++;\r\n                generalistPercentage = Math.round((generalist / total.length) * 100);\r\n              }\r\n              if (total[i].doctor_field === \"Médecin Général\") {\r\n                generalDoctor++;\r\n                generalDoctorPercentage = Math.round((generalDoctor / total.length) * 100);\r\n              }\r\n              if (total[i].doctor_field === \"Neuphrologie\") {\r\n                neuphrologie++;\r\n                neuphrologiePercentage = Math.round((neuphrologie / total.length) * 100);\r\n              }\r\n              if (total[i].doctor_field === \"Médecin enfant\") {\r\n                kidsDoctor++;\r\n                kidsDoctorPercentage = Math.round((kidsDoctor / total.length) * 100);\r\n              }\r\n              if (total[i].doctor_field === \"Chirugien\") {\r\n                chirugien++;\r\n                chirugienPercentage = Math.round((chirugien / total.length) * 100);\r\n              }\r\n            }\r\n            this.setState({\r\n              chartData:\r\n              {\r\n                labels: [\"Docteur de travail\", \"Généraliste\", \"Docteur général\", \"Neuphrologiste\", \"Docteur d'enfant\", \"Chirugien\"],\r\n                datasets: [\r\n                  {\r\n                    data: [jobDoctorPercentage, generalistPercentage, generalDoctorPercentage, neuphrologiePercentage, kidsDoctorPercentage, chirugienPercentage],\r\n                    backgroundColor: [\r\n                      \"rgb(229,104,56)\",\r\n                      \"rgb(105,66,209)\",\r\n                      \"rgb(239,191,61)\",\r\n                      \"rgb(175,72,152)\",\r\n                      \"rgb(89,180,189)\",\r\n                      \"rgb(171,219,227)\",\r\n                    ],\r\n                    borderWidth: 2,\r\n                    borderColor: [\r\n                      \"rgb(229,104,56)\",\r\n                      \"rgb(105,66,209)\",\r\n                      \"rgb(239,191,61)\",\r\n                      \"rgb(175,72,152)\",\r\n                      \"rgb(89,180,189)\",\r\n                      \"rgb(171,219,227)\",\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            })\r\n          })\r\n      } else if(this.props.user[0].user_position === \"CDP\") {\r\n        axiosInstance.get(`http://localhost:3000/api/doctors`, {\r\n        }).then((response) => {\r\n          let total = response.data\r\n          for (let i = 0; i < total.length; i++) {\r\n            if (total[i].doctor_field === \"Médecin de travail\") {\r\n              jobDoctor++;\r\n              jobDoctorPercentage = Math.round((jobDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Generaliste\") {\r\n              generalist++;\r\n              generalistPercentage = Math.round((generalist / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Médecin Général\") {\r\n              generalDoctor++;\r\n              generalDoctorPercentage = Math.round((generalDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Neuphrologie\") {\r\n              neuphrologie++;\r\n              neuphrologiePercentage = Math.round((neuphrologie / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Médecin enfant\") {\r\n              kidsDoctor++;\r\n              kidsDoctorPercentage = Math.round((kidsDoctor / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_field === \"Chirugien\") {\r\n              chirugien++;\r\n              chirugienPercentage = Math.round((chirugien / total.length) * 100);\r\n            }\r\n          }\r\n          this.setState({\r\n            chartData:\r\n            {\r\n              labels: [\"Docteur de travail\", \"Généraliste\", \"Docteur général\", \"Neuphrologiste\", \"Docteur d'enfant\", \"Chirugien\"],\r\n              datasets: [\r\n                {\r\n                  data: [jobDoctorPercentage, generalistPercentage, generalDoctorPercentage, neuphrologiePercentage, kidsDoctorPercentage, chirugienPercentage],\r\n                  backgroundColor: [\r\n                    \"rgb(229,104,56)\",\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(175,72,152)\",\r\n                    \"rgb(89,180,189)\",\r\n                    \"rgb(171,219,227)\",\r\n                  ],\r\n                  borderWidth: 2,\r\n                  borderColor: [\r\n                    \"rgb(229,104,56)\",\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(175,72,152)\",\r\n                    \"rgb(89,180,189)\",\r\n                    \"rgb(171,219,227)\",\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n        })\r\n    }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, isLoading } = this.props;\r\n    if (isLoading) {\r\n      return (\r\n        <CircularProgress color=\"primary\" className=\"spinner\" /> // Loading Spinner\r\n      )\r\n    } else {\r\n      return (\r\n        <Card small className=\"h-100\">\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">{title}</h6>\r\n          </CardHeader>\r\n          <CardBody className=\"d-flex py-0\">\r\n            <Doughnut\r\n              data={this.state.chartData}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n              }}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nDoctorsSpeciality.propTypes = {\r\n  /**\r\n   * The component's title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The chart config object.\r\n   */\r\n};\r\n\r\nDoctorsSpeciality.defaultProps = {\r\n  title: \"Statistiques spécialités médecins\", // Card Title\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    doctors: state.doctorsReducer.doctors,\r\n    user: state.authReducer.user,\r\n    isLoading: state.doctorsReducer.isLoading,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(DoctorsSpeciality);\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"shards-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { connect } from \"react-redux\";\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport axiosInstance from \"../../config/axios-instance\";\r\n\r\nclass DoctorsFeedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      doctors: [],\r\n      chartData: {},\r\n    }\r\n  }\r\n// Component on mount\r\n  componentDidMount() {\r\n    let A = 0;\r\n    let B = 0;\r\n    let C = 0;\r\n    let APercentage = 0;\r\n    let BPercentage = 0;\r\n    let CPercentage = 0;\r\n    if (this.props.user.length) {\r\n      if (this.props.user[0].user_position === \"VM\") {\r\n        axiosInstance.get(`http://localhost:3000/api/doctors/VMsupervisors/${this.props.user[0].user_id}`, {\r\n          params: {\r\n            user_id: this.props.user[0].user_id\r\n          }\r\n        }).then((response) => {\r\n          let total = response.data\r\n          for (let i = 0; i < total.length; i++) {\r\n            if (total[i].doctor_potential === \"A\") {\r\n              A++;\r\n              APercentage = Math.round((A / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"B\") {\r\n              B++;\r\n              BPercentage = Math.round((B / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"C\") {\r\n              C++;\r\n              CPercentage = Math.round((C / total.length) * 100);\r\n            }\r\n          }\r\n          this.setState({\r\n            chartData:\r\n            {\r\n              labels: [\"A\", \"B\", \"C\"],\r\n              datasets: [\r\n                {\r\n                  data: [APercentage, BPercentage, CPercentage],\r\n                  backgroundColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ],\r\n                  borderWidth: 2,\r\n                  borderColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n        })\r\n      } else if (this.props.user[0].user_position === \"DSM\") {\r\n        axiosInstance.get(`http://localhost:3000/api/doctors/VMsupervisors/${this.props.user[0].VM_supervisor}`, {\r\n          params: {\r\n            user_id: this.props.user[0].VM_supervisor\r\n          }\r\n        }).then((response) => {\r\n          let total = response.data\r\n          for (let i = 0; i < total.length; i++) {\r\n            if (total[i].doctor_potential === \"A\") {\r\n              A++;\r\n              APercentage = Math.round((A / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"B\") {\r\n              B++;\r\n              BPercentage = Math.round((B / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"C\") {\r\n              C++;\r\n              CPercentage = Math.round((C / total.length) * 100);\r\n            }\r\n          }\r\n          this.setState({\r\n            chartData:\r\n            {\r\n              labels: [\"A\", \"B\", \"C\"],\r\n              datasets: [\r\n                {\r\n                  data: [APercentage, BPercentage, CPercentage],\r\n                  backgroundColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ],\r\n                  borderWidth: 2,\r\n                  borderColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n        })\r\n      } else if (this.props.user[0].user_position === \"CDP\") {\r\n        axiosInstance.get(`http://localhost:3000/api/doctors`, {\r\n        }).then((response) => {\r\n          let total = response.data\r\n          for (let i = 0; i < total.length; i++) {\r\n            if (total[i].doctor_potential === \"A\") {\r\n              A++;\r\n              APercentage = Math.round((A / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"B\") {\r\n              B++;\r\n              BPercentage = Math.round((B / total.length) * 100);\r\n            }\r\n            if (total[i].doctor_potential === \"C\") {\r\n              C++;\r\n              CPercentage = Math.round((C / total.length) * 100);\r\n            }\r\n          }\r\n          this.setState({\r\n            chartData:\r\n            {\r\n              labels: [\"A\", \"B\", \"C\"],\r\n              datasets: [\r\n                {\r\n                  data: [APercentage, BPercentage, CPercentage],\r\n                  backgroundColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ],\r\n                  borderWidth: 2,\r\n                  borderColor: [\r\n                    \"rgb(105,66,209)\",\r\n                    \"rgb(239,191,61)\",\r\n                    \"rgb(229,104,56)\",\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          })\r\n        })\r\n      } \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, isLoading } = this.props;\r\n    if (isLoading) {\r\n      return (\r\n        <CircularProgress color=\"primary\" className=\"spinner\" /> // Loading Spinner\r\n      )\r\n    } else {\r\n      return (\r\n        <Card small className=\"h-100\">\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">{title}</h6>\r\n          </CardHeader>\r\n          <CardBody className=\"d-flex py-0\">\r\n            <Doughnut\r\n              data={this.state.chartData}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n              }}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nDoctorsFeedback.propTypes = {\r\n  /**\r\n   * The component's title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The chart config object.\r\n   */\r\n};\r\n\r\nDoctorsFeedback.defaultProps = {\r\n  title: \"Statistiques feedback médecins\", // Card Title\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    user: state.authReducer.user,\r\n    doctors: state.doctorsReducer.doctors\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(DoctorsFeedback);\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"shards-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport axiosInstance from \"../../config/axios-instance\";\r\n\r\nclass ActionsReporting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            actions: [],\r\n            user: {},\r\n            chartData: {},\r\n            validated: 0,\r\n            denied: 0,\r\n            pending: 0,\r\n        }\r\n    }\r\n\r\n    // Component on mount\r\n    componentDidMount() {\r\n        let pendingVM = 0;\r\n        let pendingDSM = 0;\r\n        let pendingCDP = 0;\r\n        let validated = 0;\r\n        let denied = 0;\r\n        let pendingPercentage = 0;\r\n        let pendingPercentageVM = 0;\r\n        let pendingPercentageDSM = 0;\r\n        let pendingPercentageCDP = 0;\r\n        let deniedPercentage = 0;\r\n        let validatedPercentage = 0;\r\n        let isCancelled = false;\r\n        try {\r\n            if (this.props.user.length > 0) {\r\n                this.setState({ user: this.props.user[0] });\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        if (!isCancelled) {\r\n            if (this.props.user[0]) {\r\n                if (this.props.user[0].user_position === \"VM\") {\r\n                    axiosInstance.get(`http://localhost:3000/api/actions/user/user_id?user_id=${this.props.user[0].user_id}`).then(response => {\r\n                        let actions = response.data;\r\n                        for (var i = 0; i < actions.length; i++) {\r\n                            if (actions[i].status === \"En attente de validation VM\") {\r\n                                pendingVM++;\r\n                                pendingPercentageVM = (pendingVM / actions.length) * 100;\r\n                            }\r\n                            if (actions[i].status === \"En attente de validation DSM\") {\r\n                                pendingDSM++;\r\n                                pendingPercentageDSM = (pendingDSM / actions.length) * 100;\r\n                            }\r\n                            if (actions[i].status === \"En attente de validation CDP\") {\r\n                                pendingCDP++;\r\n                                pendingPercentageCDP = (pendingCDP / actions.length) * 100;\r\n                            }\r\n                            if (actions[i].status === \"Validé\") {\r\n                                validated++;\r\n                                validatedPercentage = Math.round((validated / actions.length) * 100);\r\n                            }\r\n                            if (actions[i].status === \"Refusé\") {\r\n                                denied++;\r\n                                deniedPercentage = Math.round((denied / actions.length) * 100);\r\n                            }\r\n                        }\r\n                        pendingPercentage = Math.round(pendingPercentageVM + pendingPercentageDSM + pendingPercentageCDP);\r\n                        this.setState({\r\n                            chartData:\r\n                            {\r\n                                labels: [\"En attente\", \"Validé\", \"Refusé\"],\r\n                                datasets: [\r\n                                    {\r\n                                        data: [pendingPercentage, validatedPercentage, deniedPercentage],\r\n                                        backgroundColor: [\r\n                                            \"rgb(239,191,61)\",\r\n                                            \"rgb(105,66,209)\",\r\n                                            \"rgb(229,104,56)\",\r\n                                        ],\r\n                                        borderWidth: 2,\r\n                                        borderColor: [\r\n                                            \"rgb(239,191,61)\",\r\n                                            \"rgb(105,66,209)\",\r\n                                            \"rgb(229,104,56)\",\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        })\r\n                    })\r\n                } else if (this.props.user[0].user_position === \"DSM\") {\r\n                    axiosInstance.get(`http://localhost:3000/api/actions/user/VM/actions/:${this.props.user[0].user_id}`, {\r\n                        params: {\r\n                            user_id: this.props.user[0].user_id\r\n                        }\r\n                    }).then(response => {\r\n                        let actions = response.data;\r\n                        for (var i = 0; i < actions.length; i++) {\r\n                            if (actions[i].status === \"En attente de validation DSM\") {\r\n                                pendingDSM++;\r\n                                pendingPercentageDSM = (pendingDSM / actions.length) * 100;\r\n                            }\r\n                            if (actions[i].status === \"Validé\") {\r\n                                validated++;\r\n                                validatedPercentage = Math.round((validated / actions.length) * 100);\r\n                            }\r\n                            if (actions[i].status === \"Refusé\") {\r\n                                denied++;\r\n                                deniedPercentage = Math.round((denied / actions.length) * 100);\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            chartData:\r\n                            {\r\n                                labels: [\"En attente\", \"Validé\", \"Refusé\"],\r\n                                datasets: [\r\n                                    {\r\n                                        data: [pendingPercentageDSM, validatedPercentage, deniedPercentage],\r\n                                        backgroundColor: [\r\n                                            \"rgb(239,191,61)\",\r\n                                            \"rgb(105,66,209)\",\r\n                                            \"rgb(229,104,56)\",\r\n                                        ],\r\n                                        borderWidth: 2,\r\n                                        borderColor: [\r\n                                            \"rgb(239,191,61)\",\r\n                                            \"rgb(105,66,209)\",\r\n                                            \"rgb(229,104,56)\",\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        })\r\n                    })\r\n                } else if (this.props.user[0].user_position === \"CDP\") {\r\n                    axiosInstance.get(`http://localhost:3000/api/actions/user/VM/validated/actions/:${this.props.user[0].user_id}`, {\r\n                        params: {\r\n                            user_id: this.props.user[0].user_id\r\n                        }\r\n                    }).then(response => {\r\n                        let actions = response.data;\r\n                        for (var i = 0; i < actions.length; i++) {\r\n                            if (actions[i].status === \"En attente de validation CDP\") {\r\n                                pendingCDP++;\r\n                                pendingPercentageCDP = (pendingCDP / actions.length) * 100;\r\n                            }\r\n                            if (actions[i].status === \"Validé\") {\r\n                                validated++;\r\n                                validatedPercentage = Math.round((validated / actions.length) * 100);\r\n                            }\r\n                            if (actions[i].status === \"Refusé\") {\r\n                                denied++;\r\n                                deniedPercentage = Math.round((denied / actions.length) * 100);\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            chartData:\r\n                            {\r\n                                labels: [\"En attente\", \"Validé\", \"Refusé\"],\r\n                                datasets: [\r\n                                    {\r\n                                        data: [pendingPercentageCDP, validatedPercentage, deniedPercentage],\r\n                                        backgroundColor: [\r\n                                            \"rgb(239,191,61)\",\r\n                                            \"rgb(105,66,209)\",\r\n                                            \"rgb(229,104,56)\",\r\n                                        ],\r\n                                        borderWidth: 2,\r\n                                        borderColor: [\r\n                                            \"rgb(239,191,61)\",\r\n                                            \"rgb(105,66,209)\",\r\n                                            \"rgb(229,104,56)\",\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        isCancelled = true;\r\n    }\r\n    render() {\r\n        const { title } = this.props;\r\n        return (\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"d-flex py-0\">\r\n                    <Doughnut\r\n                        data={this.state.chartData}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: true,\r\n                        }}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nActionsReporting.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart config object.\r\n     */\r\n};\r\n\r\nActionsReporting.defaultProps = {\r\n    title: \"Rapport sur les actions\",\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        actions: state.actionsReducer.actionsUser,\r\n        user: state.authReducer.user,\r\n        isLoading: state.authReducer.isLoading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ActionsReporting);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport DoctorsSpeciality from \"../components/dashboard-statistics/DoctorsSpeciality\";\r\nimport DoctorsFeedback from \"../components/dashboard-statistics/DoctorsFeedback\";\r\nimport ActionsReporting from \"../components/dashboard-statistics/ActionsReporting\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Charts = () => {\r\n  const [Username, setUsername] = useState(\"\");\r\n  const user = useSelector(\r\n    (state) => state.authReducer.user\r\n);\r\nconst handleClick = (e) => {\r\n  console.log(e)\r\n\r\n}\r\nuseEffect(() => {\r\n  if(user.length) {\r\n    setUsername(user[0].user_email.split(\"@\").shift());\r\n  }\r\n}, [user])\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1225, height: '100%' }}>\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle title={`Bonjour ${Username}`} subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\r\n        </Row>\r\n        <Row style={{ textAlign: \"center\", justifyContent: \"center\" }}>\r\n          <Col lg=\"4\" md=\"9\" sm=\"12\" className=\"mb-4\">\r\n            <ActionsReporting />\r\n          </Col>\r\n          {/* Doctors Feedbacks */}\r\n          <Col lg=\"4\" md=\"9\" sm=\"12\" className=\"mb-4\">\r\n            <DoctorsFeedback />\r\n          </Col>\r\n          {/* Doctors Speciality */}\r\n          <Col lg=\"4\" md=\"9\" sm=\"12\" className=\"mb-4\">\r\n            <DoctorsSpeciality />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","import React from \"react\";\r\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { markAsReadNotificationsByVMsupervisor, markAsReadNotificationsByDSMsupervisor, markAsReadNotificationsByCDPsupervisor } from \"../../../../actions/notifications-actions/actions\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/fr';\r\n\r\nclass Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notificationsVM_supervisor: [],\r\n      notificationsDSM_supervisor: [],\r\n      notificationsCDP_supervisor: [],\r\n      user: {},\r\n      notesActionSender: [],\r\n      alertNotif: {},\r\n      VM_counter: 0,\r\n      DSM_counter: 0,\r\n      CDP_counter: 0,\r\n      showCounter: true,\r\n      visible: false\r\n    };\r\n\r\n    this.toggleNotifications = this.toggleNotifications.bind(this);\r\n  }\r\n\r\n  // Function to toggle notifications state in open and close //\r\n  toggleNotifications() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n    this.setState({\r\n      showCounter: false\r\n    });\r\n  }\r\n  // Component on mount\r\n  componentDidMount() {\r\n    if (this.props.user.length) {\r\n      this.setState({ user: this.props.user[0] })\r\n    }\r\n  }\r\n  // Component will recieve props //\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.state.user.user_position === \"VM\") {\r\n      let notificationsVM_supervisor = nextProps.VM_notif.reverse();\r\n      let filteredNotificationsVM_supervisor = notificationsVM_supervisor.filter(element => element.markAsRead_VM_supervisor === 0);\r\n      let VM_counter = filteredNotificationsVM_supervisor.length;\r\n      this.setState({ notificationsVM_supervisor });\r\n      this.setState({ VM_counter });\r\n    } else if (this.state.user.user_position === \"DSM\") {\r\n      let notificationsDSM_supervisor = nextProps.DSM_notif.reverse();\r\n      let filteredNotificationsDSM_supervisor = notificationsDSM_supervisor.filter(element => element.markAsRead_DSM_supervisor === 0);\r\n      let DSM_counter = filteredNotificationsDSM_supervisor.length;\r\n      this.setState({ notificationsDSM_supervisor });\r\n      this.setState({ DSM_counter });\r\n    } else if (this.state.user.user_position === \"CDP\") {\r\n      let notificationsCDP_supervisor = nextProps.CDP_notif.reverse();\r\n      let filteredNotificationsCDP_supervisor = notificationsCDP_supervisor.filter(element => element.markAsRead_CDP_supervisor === 0);\r\n      let CDP_counter = filteredNotificationsCDP_supervisor.length;\r\n      this.setState({ notificationsCDP_supervisor });\r\n      this.setState({ CDP_counter });\r\n    }\r\n  }\r\n  // Component will update //\r\n  componentDidUpdate() {\r\n    let notificationsVM_supervisor = this.state.notificationsVM_supervisor;\r\n    let notificationsDSM_supervisor = this.state.notificationsDSM_supervisor;\r\n    let notificationsCDP_supervisor = this.state.notificationsCDP_supervisor;\r\n    if (this.state.user.user_position === \"VM\") {\r\n      if (this.state.visible) {\r\n        for (let i = 0; i < notificationsVM_supervisor.length; i++) {\r\n          if (notificationsVM_supervisor[i].markAsRead_VM_supervisor === 0) {\r\n            this.props.markAsReadNotificationsByVMsupervisor(notificationsVM_supervisor[i].notification_id)\r\n          }\r\n        }\r\n      }\r\n    } else if (this.state.user.user_position === \"DSM\") {\r\n      if (this.state.visible) {\r\n        for (let i = 0; i < notificationsDSM_supervisor.length; i++) {\r\n          if (notificationsDSM_supervisor[i].markAsRead_DSM_supervisor === 0) {\r\n            this.props.markAsReadNotificationsByDSMsupervisor(notificationsDSM_supervisor[i].notification_id)\r\n          }\r\n        }\r\n      }\r\n    } else if (this.state.user.user_position === \"CDP\") {\r\n      if (this.state.visible) {\r\n        for (let i = 0; i < notificationsCDP_supervisor.length; i++) {\r\n          if (notificationsCDP_supervisor[i].markAsRead_CDP_supervisor === 0) {\r\n            this.props.markAsReadNotificationsByCDPsupervisor(notificationsCDP_supervisor[i].notification_id)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem className=\"border-right dropdown notifications\">\r\n        <NavLink\r\n          className=\"nav-link-icon text-center\"\r\n          onClick={this.toggleNotifications}\r\n        >\r\n          <div className=\"nav-link-icon__wrapper\">\r\n            <i className=\"material-icons\">&#xE7F4;</i>\r\n            {this.state.showCounter && this.state.VM_counter !== 0 && (\r\n              <Badge pill theme=\"danger\" className=\"notifications-badge\">\r\n                {this.state.VM_counter}+\r\n              </Badge>\r\n            )}\r\n            {this.state.showCounter && this.state.DSM_counter !== 0 && (\r\n              <Badge pill theme=\"danger\" className=\"notifications-badge\">\r\n                {this.state.DSM_counter}+\r\n              </Badge>\r\n            )}\r\n            {this.state.showCounter && this.state.CDP_counter !== 0 && (\r\n              <Badge pill theme=\"danger\" className=\"notifications-badge\">\r\n                {this.state.CDP_counter}+\r\n              </Badge>\r\n            )}\r\n          </div>\r\n        </NavLink>\r\n        <Collapse\r\n          open={this.state.visible}\r\n          className={this.state.notificationsVM_supervisor.length || this.state.notificationsDSM_supervisor.length || this.state.notificationsCDP_supervisor.length ? \"dropdown-menu dropdown-menu-small notif\" : \"dropdown-menu dropdown-menu-small no-notif\"}\r\n        >\r\n          {this.state.user.user_position === \"VM\" && this.state.notificationsVM_supervisor.length && this.state.notificationsVM_supervisor.map((element, key) => {\r\n            return (\r\n              <DropdownItem key={key}><div>\r\n                <span>{element.notification_name}</span><br></br>\r\n                <span className=\"time-left\">Il y a {(moment(new Date()).from(new Date(element.recieved_since))).split(\"dans\")}</span>\r\n              </div></DropdownItem>\r\n            )\r\n          })}\r\n          {this.state.user.user_position === \"DSM\" && this.state.notificationsDSM_supervisor.length && this.state.notificationsDSM_supervisor.map((element, key) => {\r\n            return (\r\n              <DropdownItem key={key}><div>\r\n                <span>{element.notification_name}</span><br></br>\r\n                <span className=\"time-left\">Il y a {(moment(new Date()).from(new Date(element.recieved_since))).split(\"dans\")}</span>\r\n              </div></DropdownItem>\r\n            )\r\n          })}\r\n          {this.state.user.user_position === \"CDP\" && this.state.notificationsCDP_supervisor.length && this.state.notificationsCDP_supervisor.map((element, key) => {\r\n            return (\r\n              <DropdownItem key={key}><div>\r\n                <span>{element.notification_name}</span><br></br>\r\n                <span className=\"time-left\">Il y a {(moment(new Date()).from(new Date(element.recieved_since))).split(\"dans\")}</span>\r\n              </div></DropdownItem>\r\n            )\r\n          })}\r\n          <DropdownItem tag={Link} to=\"all-notifications\" className=\"notification__all text-center\">\r\n            Toutes les notifications\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    user: state.authReducer.user,\r\n    lastNotification: state.notificationsReducer.lastNotification,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    markAsReadNotificationsByVMsupervisor: (notification_id) => dispatch(markAsReadNotificationsByVMsupervisor(notification_id)),\r\n    markAsReadNotificationsByDSMsupervisor: (notification_id) => dispatch(markAsReadNotificationsByDSMsupervisor(notification_id)),\r\n    markAsReadNotificationsByCDPsupervisor: (notification_id) => dispatch(markAsReadNotificationsByCDPsupervisor(notification_id)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink\r\n} from \"shards-react\";\r\nimport {\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport { connect } from \"react-redux\";\r\nimport { logoutAuthUser } from \"../../../../actions/auth-actions/actions\";\r\n\r\n\r\nclass UserActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n      username: \"\",\r\n    };\r\n\r\n    this.toggleUserActions = this.toggleUserActions.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  toggleUserActions() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  handleLogout() {\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      if (this.props.user.length > 0) {\r\n        this.setState({ username: this.props.user[0].user_email.split(\"@\").shift() })\r\n        this.setState({ user_avatar: this.props.user[0].user_avatar })\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n          <Avatar alt=\"Knaizia Yassine\" className=\"user-avatar rounded-circle mr-2\" src={this.state.user_avatar} />\r\n          <span className=\"d-none d-md-inline-block\">{this.state.username}</span>\r\n        </DropdownToggle>\r\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n          <DropdownItem tag={Link} to=\"user-profile\">\r\n            <i className=\"material-icons\">&#xE7FD;</i> Mon profil\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to=\"edit-user-profile\">\r\n            <i className=\"material-icons\">&#xE8B8;</i> Mes paramétres\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to=\"file-manager-list\">\r\n            <i className=\"material-icons\">&#xE2C7;</i> Confidentialité\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to=\"transaction-history\">\r\n            <i className=\"material-icons\">&#xE896;</i> A propos\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem onClick={this.handleLogout} tag={Link} to=\"/\" className=\"text-danger\">\r\n          <i className=\"material-icons\">power_settings_new</i> Déconnextion\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n// Map state to Props\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: () => dispatch(logoutAuthUser())\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    user: state.authReducer.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserActions);\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nconst NavbarNav = ({ VM_notif, DSM_notif, CDP_notif, notes }) => {\r\n return (\r\n    <Nav navbar className=\"border-left flex-row\">\r\n      <Notifications notes={notes} VM_notif={VM_notif} DSM_notif={DSM_notif} CDP_notif={CDP_notif} />\r\n      <UserActions />\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default NavbarNav;","export default {\r\n  CHANGE: \"CHANGE\",\r\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\r\n};\r\n","import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","import { EventEmitter } from \"events\";\r\n\r\nimport Dispatcher from \"./dispatcher\";\r\nimport Constants from \"./constants\";\r\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\r\n\r\nlet _store = {\r\n  menuVisible: false,\r\n  navItems: getSidebarNavItems()\r\n};\r\n\r\nclass Store extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n\r\n    this.registerToActions = this.registerToActions.bind(this);\r\n    this.toggleSidebar = this.toggleSidebar.bind(this);\r\n\r\n    Dispatcher.register(this.registerToActions.bind(this));\r\n  }\r\n\r\n  registerToActions({ actionType, payload }) {\r\n    switch (actionType) {\r\n      case Constants.TOGGLE_SIDEBAR:\r\n        this.toggleSidebar();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  toggleSidebar() {\r\n    _store.menuVisible = !_store.menuVisible;\r\n    this.emit(Constants.CHANGE);\r\n  }\r\n\r\n  getMenuState() {\r\n    return _store.menuVisible;\r\n  }\r\n\r\n  getSidebarItems() {\r\n    return _store.navItems;\r\n  }\r\n\r\n  addChangeListener(callback) {\r\n    this.on(Constants.CHANGE, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(Constants.CHANGE, callback);\r\n  }\r\n}\r\n\r\nexport default new Store();\r\n","\r\nconst getSidebarNavItems  = () => {\r\n  return [\r\n    {\r\n      title: \"Dashboard\",\r\n      to: \"/dashboard\",\r\n      htmlBefore: '<i class=\"material-icons\">house</i>',\r\n    },\r\n    {\r\n      title: \"Initiation actions\",\r\n      htmlBefore: '<i class=\"material-icons\">library_books</i>',\r\n      to: \"/initiation-action\",\r\n    },\r\n    {\r\n      title: \"Suivi actions\",\r\n      htmlBefore: '<i class=\"material-icons\">tablet_mac</i>',\r\n      to: \"/monitoring-action\",\r\n    },\r\n    {\r\n      title: \"Validation actions\",\r\n      htmlBefore: '<i class=\"material-icons\">mobile_friendly</i>',\r\n      to: \"/action-validation\",\r\n    },\r\n    {\r\n      title: \"Archivage actions\",\r\n      htmlBefore: '<i class=\"material-icons\">mobile_friendly</i>',\r\n      to: \"/action-archiving\",\r\n    }\r\n  ];\r\n}\r\n\r\nexport default getSidebarNavItems;\r\n","import React from \"react\";\r\n\r\nimport { Dispatcher, Constants } from \"../../../flux\";\r\n\r\nclass NavbarToggle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    Dispatcher.dispatch({\r\n      actionType: Constants.TOGGLE_SIDEBAR\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\r\n          <i className=\"material-icons\">&#xE5D2;</i>\r\n        </a>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Container, Navbar } from \"shards-react\";\r\n// import NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({ layout, stickyTop, VM_notif, DSM_notif, CDP_notif, notes }) => {\r\n  const classes = classNames(\r\n    \"main-navbar\",\r\n    \"bg-white\",\r\n    stickyTop && \"sticky-top\"\r\n  );\r\n  return (\r\n    <div className={classes}>\r\n      <Container className=\"p-0\">\r\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n          <NavbarToggle />\r\n          {/* <NavbarSearch /> */}\r\n          <NavbarNav notes={notes} VM_notif={VM_notif} DSM_notif={DSM_notif} CDP_notif={CDP_notif}/>\r\n        </Navbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n  /**\r\n   * The layout type where the MainNavbar is used.\r\n   */\r\n  layout: PropTypes.string,\r\n  /**\r\n   * Whether the main navbar is sticky to the top, or not.\r\n   */\r\n  stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n  stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Navbar, NavbarBrand } from \"shards-react\";\r\nimport { Dispatcher, Constants } from \"../../../flux\";\r\nimport {\r\n  Avatar,\r\n} from '@material-ui/core';\r\nclass SidebarMainNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\r\n  }\r\n\r\n  handleToggleSidebar() {\r\n    Dispatcher.dispatch({\r\n      actionType: Constants.TOGGLE_SIDEBAR\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-navbar\">\r\n        <Navbar\r\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\r\n          type=\"light\"\r\n        >\r\n          <NavbarBrand\r\n            className=\"w-100 mr-0\"\r\n            href=\"#\"\r\n            style={{ lineHeight: \"25px\" }}\r\n          >\r\n            <div className=\"d-table m-auto\">\r\n            <Avatar alt=\"LinkD\" src=\"https://www.kindpng.com/picc/m/256-2564683_transparent-link-website-transparent-website-link-logo-hd.png\" />\r\n            </div>\r\n          </NavbarBrand>\r\n          {/* eslint-disable-next-line */}\r\n          <a\r\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\r\n            onClick={this.handleToggleSidebar}\r\n          >\r\n            <i className=\"material-icons\">&#xE5C4;</i>\r\n          </a>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebarMainNavbar.propTypes = {\r\n  /**\r\n   * Whether to hide the logo text, or not.\r\n   */\r\n  hideLogoText: PropTypes.bool\r\n};\r\n\r\nSidebarMainNavbar.defaultProps = {\r\n  hideLogoText: false\r\n};\r\n\r\nexport default SidebarMainNavbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\r\nimport { NavItem, NavLink } from \"shards-react\";\r\n\r\nconst SidebarNavItem = ({ item }) => (\r\n  <NavItem>\r\n    <NavLink tag={RouteNavLink} className=\"link-items\" to={item.to}>\r\n      {item.htmlBefore && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\r\n        />\r\n      )}\r\n      {item.title && <span>{item.title}</span>}\r\n      {item.htmlAfter && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\r\n        />\r\n      )}\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nSidebarNavItem.propTypes = {\r\n  /**\r\n   * The item object.\r\n   */\r\n  item: PropTypes.object\r\n};\r\n\r\nexport default SidebarNavItem;\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport SidebarNavItem from \"./SidebarNavItem\";\r\nimport { Store } from \"../../../flux\";\r\n\r\nclass SidebarNavItems extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n// Local state\r\n    this.state = {\r\n      navItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n// Component on mount\r\n  componentDidMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n// Component on unmount\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n// On change function\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      navItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { navItems: items } = this.state;\r\n    return (\r\n      <div className=\"nav-wrapper\">\r\n        <Nav className=\"nav--no-borders flex-column\">\r\n          {items.map((item, idx) => (\r\n            <SidebarNavItem key={idx} item={item} />\r\n          ))}\r\n        </Nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SidebarNavItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Col } from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\n// import SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport { Store } from \"../../../flux\";\r\n\r\nclass MainSidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuVisible: false,\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      menuVisible: Store.getMenuState(),\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const classes = classNames(\r\n      \"main-sidebar\",\r\n      \"px-0\",\r\n      \"col-12\",\r\n      this.state.menuVisible && \"open\"\r\n    );\r\n\r\n    return (\r\n      <Col\r\n        tag=\"aside\"\r\n        className={classes}\r\n        lg={{ size: 2 }}\r\n        md={{ size: 3 }}\r\n      >\r\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\r\n        {/* <SidebarSearch /> */}\r\n        <SidebarNavItems />\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n  /**\r\n   * Whether to hide the logo text, or not.\r\n   */\r\n  hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n  hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MainFooter = ({ contained, menuItems, copyright }) => (\r\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\r\n    <Container fluid={contained}>\r\n      <Row>\r\n        <Nav>\r\n          {menuItems.map((item, idx) => (\r\n            <NavItem key={idx}>\r\n              <NavLink tag={Link} to={item.to}>\r\n                {item.title}\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        <span style={{ textAlign: 'center' }} className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\r\n        </Nav>\r\n      </Row>\r\n    </Container>\r\n  </footer>\r\n);\r\n\r\nMainFooter.propTypes = {\r\n  /**\r\n   * Whether the content is contained, or not.\r\n   */\r\n  contained: PropTypes.bool,\r\n  /**\r\n   * The menu items array.\r\n   */\r\n  menuItems: PropTypes.array,\r\n  /**\r\n   * The copyright info.\r\n   */\r\n  copyright: PropTypes.string\r\n};\r\n\r\nMainFooter.defaultProps = {\r\n  contained: false,\r\n  copyright: \"Tout droits réservés Multiprod Tunisia en partenariat Pro LV Maroc. © 2021\",\r\n  menuItems: [\r\n    {\r\n      title: \"Dashboard\",\r\n      to: \"/dashboard\"\r\n    },\r\n    {\r\n      title: \"Initiation Action\",\r\n      to: \"#\"\r\n    },\r\n  ]\r\n};\r\n\r\nexport default MainFooter;\r\n","\r\nimport React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\r\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\r\nimport MainFooter from \"../components/layout/MainFooter\";\r\nimport { getNotificationsByVMsupervisor, getNotificationsByDSMsupervisor, getNotificationsByCDPsupervisor } from \"../actions/notifications-actions/actions\";\r\nimport io from \"socket.io-client\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst SERVER = \"http://localhost:3001\";\r\nconst socket = io(SERVER, { transports: [\"websocket\", \"polling\"] });\r\n\r\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => {\r\n  const dispatch = useDispatch();\r\n  // User state from redux store\r\n  const user = useSelector(\r\n    (state) => state.authReducer.user\r\n  );\r\n  // VM Notifications state from redux store\r\n  const VM_notif = useSelector(\r\n    (state) => state.notificationsReducer.notifications_VM_supervisor\r\n  );\r\n  // DSM Notifications state from redux store\r\n  const DSM_notif = useSelector(\r\n    (state) => state.notificationsReducer.notifications_DSM_supervisor\r\n  );\r\n  // CDP Notifications state from redux store\r\n  const CDP_notif = useSelector(\r\n    (state) => state.notificationsReducer.notifications_CDP_supervisor\r\n  );\r\n  // Notes state from redux store\r\n  const notes = useSelector(\r\n    (state) => state.notesReducer.notesActionSender\r\n  );\r\n  useEffect(() => {\r\n    socket.on(\"ACTION-VALIDATION\", (data) => {\r\n      fetchNotifications();\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, []);\r\n  const fetchNotifications = async () => {\r\n    if (user.length) {\r\n      if (user[0].user_position === \"VM\") {\r\n        dispatch(getNotificationsByVMsupervisor(user[0].user_id));\r\n      } else if (user[0].user_position === \"DSM\") {\r\n        dispatch(getNotificationsByDSMsupervisor(user[0].user_id));\r\n      } else if (user[0].user_position === \"CDP\") {\r\n        dispatch(getNotificationsByCDPsupervisor(user[0].user_id));\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Container fluid >\r\n      <Row>\r\n        <MainSidebar />\r\n        <Col\r\n          className=\"main-content p-0\"\r\n          lg={{ size: 10, offset: 2 }}\r\n          md={{ size: 9, offset: 3 }}\r\n          sm=\"12\"\r\n          tag=\"main\"\r\n        >\r\n          {!noNavbar && <MainNavbar notes={notes} VM_notif={VM_notif} DSM_notif={DSM_notif} CDP_notif={CDP_notif} />}\r\n          {children}\r\n          {!noFooter && <MainFooter />}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nDefaultLayout.propTypes = {\r\n  /**\r\n   * Whether to display the navbar, or not.\r\n   */\r\n  noNavbar: PropTypes.bool,\r\n  /**\r\n   * Whether to display the footer, or not.\r\n   */\r\n  noFooter: PropTypes.bool,\r\n};\r\n\r\nDefaultLayout.defaultProps = {\r\n  noNavbar: false,\r\n  noFooter: false,\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Signup from \"./components/authentication/Signup\";\nimport Login from \"./components/authentication/Login\";\nimport ForgotPassword from \"./components/authentication/ForgotPassword\";\nimport ResetPassword from \"./components/authentication/ResetPassword\";\nimport ActionsInitiation from \"./views/ActionsInitiation\";\nimport ActionsMonitoring from \"./views/ActionsMonitoring\";\nimport ActionsValidation from \"./views/ActionsValidation\";\nimport AfterValidation from \"./views/AfterValidation\";\nimport ActionsArchiving from \"./views/ActionsArchiving\";\nimport ViewNotifications from \"./components/layout/MainNavbar/NavbarNav/ViewNotifications\";\nimport DisplayAction from \"./views/DisplayAction\";\nimport EditUserProfile from \"./components/layout/MainNavbar/dropdown-menu/EditUserProfile\";\nimport Charts from \"./views/Charts\";\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default () => {\n  const isAuthenticated = useSelector(\n    (state) => state.authReducer.isAuthenticated\n  );\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {isAuthenticated ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/login\" />}\n      </Route>\n      <GuestRoute\n        authenticated={isAuthenticated}\n        component={Login}\n        path={\"/login\"}\n      />\n      <GuestRoute\n        authenticated={isAuthenticated}\n        component={Signup}\n        path={\"/signup\"}\n      />\n      <GuestRoute\n        authenticated={isAuthenticated}\n        component={ForgotPassword}\n        path={\"/forgot\"}\n      />\n      <GuestRoute\n        authenticated={isAuthenticated}\n        component={ResetPassword}\n        path={`/reset/:resetPasswordToken`}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={Charts}\n        path={\"/dashboard\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={ActionsInitiation}\n        path={\"/initiation-action\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={ActionsMonitoring}\n        path={\"/monitoring-action\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={DisplayAction}\n        path={\"/display-action/:id\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={ActionsValidation}\n        path={\"/action-validation\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={AfterValidation}\n        path={\"/after-validation\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={ActionsArchiving}\n        path={\"/action-archiving\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={EditUserProfile}\n        path={\"/edit-user-profile\"}\n        layout={DefaultLayout}\n      />\n      <AuthRoute\n        authenticated={isAuthenticated}\n        component={ViewNotifications}\n        path={\"/all-notifications\"}\n        layout={DefaultLayout}\n      />\n    </Switch>\n  );\n}\n\nconst GuestRoute = ({ component: Component, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      exact\n      render={(props) =>\n        !authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/dashboard\" />\n        )\n      }\n    />\n  );\n};\n\nconst AuthRoute = ({ component: Component, authenticated, layout: Layout, ...rest }) => {\n  const [loggedIn, setLoggedIn] = useState(authenticated);\n  useEffect(() => {\n    setLoggedIn(authenticated);\n  }, [authenticated]);\n  return (\n    <Route\n      {...rest}\n      exact\n      render={(props) =>\n        loggedIn ? (\n          <Layout>\n            <Component {...props} />\n          </Layout>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />)}\n    />)\n};\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./store/store.js\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { getAuthUser } from \"./actions/auth-actions/actions\";\nimport {\n  CircularProgress,\n} from '@material-ui/core';\nexport let history = createBrowserHistory();\n\nconst token = localStorage.getItem(\"LinkD\");\nconst user_id = localStorage.getItem(\"user_id\");\n\nconst WrappedApp = ({ children, props }) => {\n\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => state.authReducer\n  );\n// Component on mount\n  useEffect(() => {\n    if (token) {\n      dispatch(getAuthUser(user_id));\n    }\n  }, [dispatch]);\n  return (\n    <>\n      {isLoading ? (\n        <CircularProgress color=\"primary\" /> // Loading Spinner\n      ) : (\n        children\n      )}\n    </>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <WrappedApp>\n      <Router>\n        <App />\n      </Router>\n    </WrappedApp>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// to log results (for example: reportWebVitals(console.log))\nreportWebVitals();\n\n"],"sourceRoot":""}